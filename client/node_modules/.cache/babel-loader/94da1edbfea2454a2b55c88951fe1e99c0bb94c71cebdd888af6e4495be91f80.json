{"ast":null,"code":"var _jsxFileName = \"/Users/danielestebanmenendez/workspace/aws-esteban-training/aws-study-app/client/src/components/TestTaker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TestTaker.css';\n\n// Helper functions to interact with localStorage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNotes = () => JSON.parse(localStorage.getItem('aws-notes') || '{}');\nconst saveNotes = notes => localStorage.setItem('aws-notes', JSON.stringify(notes));\nconst getHistory = () => JSON.parse(localStorage.getItem('aws-history') || '[]');\nconst saveHistory = history => localStorage.setItem('aws-history', JSON.stringify(history));\nconst QuestionDisplay = ({\n  question,\n  onAnswer,\n  onNoteChange,\n  note,\n  userAnswerIndex\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"options-form\",\n      children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question_${question.id}`,\n          id: `option_${question.id}_${index}`,\n          checked: userAnswerIndex === index,\n          onChange: () => onAnswer(question.id, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option_${question.id}_${index}`,\n          children: option.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Tus notas sobre esta pregunta...\",\n        value: note,\n        onChange: e => onNoteChange(question.id, e.target.value),\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionDisplay;\nconst ResultsDisplay = ({\n  results,\n  score,\n  onRestart\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resultados del Examen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: score >= 72 ? 'pass' : 'fail',\n      children: [\"Puntuaci\\xF3n Final: \", score.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRestart,\n      className: \"restart-btn\",\n      children: \"Hacer otro test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result-card ${result.isCorrect ? 'correct' : 'incorrect'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [index + 1, \". \", result.questionText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tu respuesta:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this), \" \", result.selectedOptionIndex !== undefined ? result.options[result.selectedOptionIndex].text : 'No contestada', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: result.isCorrect ? 'correct-text' : 'incorrect-text',\n          children: [\"(\", result.isCorrect ? 'Correcta' : 'Incorrecta', \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 156\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), !result.isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Respuesta correcta:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this), \" \", result.options.find(o => o.isCorrect).text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"explanation\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Explicaci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 38\n        }, this), \" \", result.explanation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, result.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ResultsDisplay;\nconst TestTaker = ({\n  questions\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [notes, setNotes] = useState(getNotes());\n  const [isFinished, setIsFinished] = useState(false);\n  const [finalResults, setFinalResults] = useState(null);\n  const handleAnswer = (questionId, optionIndex) => {\n    setUserAnswers({\n      ...userAnswers,\n      [questionId]: optionIndex\n    });\n  };\n  const handleNoteChange = (questionId, text) => {\n    const newNotes = {\n      ...notes,\n      [questionId]: text\n    };\n    setNotes(newNotes);\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleSubmit = () => {\n    if (window.confirm('¿Estás seguro de que quieres finalizar el examen?')) {\n      // 1. Grade the test\n      let correctAnswersCount = 0;\n      const results = questions.map(q => {\n        var _q$options$userAnswer;\n        const userAnswerIndex = userAnswers[q.id];\n        const isCorrect = userAnswerIndex !== undefined && ((_q$options$userAnswer = q.options[userAnswerIndex]) === null || _q$options$userAnswer === void 0 ? void 0 : _q$options$userAnswer.isCorrect);\n        if (isCorrect) {\n          correctAnswersCount++;\n        }\n        return {\n          ...q,\n          selectedOptionIndex: userAnswerIndex,\n          isCorrect: isCorrect || false\n        };\n      });\n      const score = correctAnswersCount / questions.length * 100;\n\n      // 2. Save notes to localStorage\n      saveNotes(notes);\n\n      // 3. Save test result to history in localStorage\n      const history = getHistory();\n      const newTestResult = {\n        _id: new Date().toISOString(),\n        // Unique ID for the test\n        createdAt: new Date(),\n        score,\n        numberOfQuestions: questions.length,\n        results // Save full results for review\n      };\n      saveHistory([...history, newTestResult]);\n\n      // 4. Update state to show results\n      setFinalResults({\n        results,\n        score\n      });\n      setIsFinished(true);\n    }\n  };\n  const handleRestart = () => {\n    window.location.reload();\n  };\n  if (isFinished && finalResults) {\n    return /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n      results: finalResults.results,\n      score: finalResults.score,\n      onRestart: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-taker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Simulacro de Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-indicator\",\n        children: [\"Pregunta \", currentQuestionIndex + 1, \" de \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionDisplay, {\n      question: currentQuestion,\n      onAnswer: handleAnswer,\n      onNoteChange: handleNoteChange,\n      note: notes[currentQuestion.id] || '',\n      userAnswerIndex: userAnswers[currentQuestion.id]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentQuestionIndex === 0,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), currentQuestionIndex === questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"finish-btn\",\n        children: \"Finalizar Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(TestTaker, \"uIMG9gCd7uiG/Oglf4OCIwRlhtQ=\");\n_c3 = TestTaker;\nexport default TestTaker;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"QuestionDisplay\");\n$RefreshReg$(_c2, \"ResultsDisplay\");\n$RefreshReg$(_c3, \"TestTaker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getNotes","JSON","parse","localStorage","getItem","saveNotes","notes","setItem","stringify","getHistory","saveHistory","history","QuestionDisplay","question","onAnswer","onNoteChange","note","userAnswerIndex","className","children","questionText","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","index","type","name","id","checked","onChange","htmlFor","text","placeholder","value","e","target","rows","_c","ResultsDisplay","results","score","onRestart","toFixed","onClick","result","isCorrect","selectedOptionIndex","undefined","find","o","explanation","_c2","TestTaker","questions","_s","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","setNotes","isFinished","setIsFinished","finalResults","setFinalResults","handleAnswer","questionId","optionIndex","handleNoteChange","newNotes","handleNext","length","handlePrevious","handleSubmit","window","confirm","correctAnswersCount","q","_q$options$userAnswer","newTestResult","_id","Date","toISOString","createdAt","numberOfQuestions","handleRestart","location","reload","currentQuestion","disabled","_c3","$RefreshReg$"],"sources":["/Users/danielestebanmenendez/workspace/aws-esteban-training/aws-study-app/client/src/components/TestTaker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TestTaker.css';\n\n// Helper functions to interact with localStorage\nconst getNotes = () => JSON.parse(localStorage.getItem('aws-notes') || '{}');\nconst saveNotes = (notes) => localStorage.setItem('aws-notes', JSON.stringify(notes));\nconst getHistory = () => JSON.parse(localStorage.getItem('aws-history') || '[]');\nconst saveHistory = (history) => localStorage.setItem('aws-history', JSON.stringify(history));\n\nconst QuestionDisplay = ({ question, onAnswer, onNoteChange, note, userAnswerIndex }) => {\n  return (\n    <div className=\"question-container\">\n      <h3>{question.questionText}</h3>\n      <form className=\"options-form\">\n        {question.options.map((option, index) => (\n          <div key={index} className=\"option\">\n            <input\n              type=\"radio\"\n              name={`question_${question.id}`}\n              id={`option_${question.id}_${index}`}\n              checked={userAnswerIndex === index}\n              onChange={() => onAnswer(question.id, index)}\n            />\n            <label htmlFor={`option_${question.id}_${index}`}>{option.text}</label>\n          </div>\n        ))}\n      </form>\n      <div className=\"notes-container\">\n        <textarea\n          placeholder=\"Tus notas sobre esta pregunta...\"\n          value={note}\n          onChange={(e) => onNoteChange(question.id, e.target.value)}\n          rows=\"4\"\n        />\n      </div>\n    </div>\n  );\n};\n\nconst ResultsDisplay = ({ results, score, onRestart }) => {\n  return (\n    <div className=\"results-container\">\n      <h2>Resultados del Examen</h2>\n      <h3 className={score >= 72 ? 'pass' : 'fail'}>Puntuación Final: {score.toFixed(2)}%</h3>\n      <button onClick={onRestart} className=\"restart-btn\">Hacer otro test</button>\n      {results.map((result, index) => (\n        <div key={result.id} className={`result-card ${result.isCorrect ? 'correct' : 'incorrect'}`}>\n          <h4>{index + 1}. {result.questionText}</h4>\n          <p><strong>Tu respuesta:</strong> {result.selectedOptionIndex !== undefined ? result.options[result.selectedOptionIndex].text : 'No contestada'} <span className={result.isCorrect ? 'correct-text' : 'incorrect-text'}>({result.isCorrect ? 'Correcta' : 'Incorrecta'})</span></p>\n          {!result.isCorrect && (\n            <p><strong>Respuesta correcta:</strong> {result.options.find(o => o.isCorrect).text}</p>\n          )}\n          <p className=\"explanation\"><strong>Explicación:</strong> {result.explanation}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst TestTaker = ({ questions }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [notes, setNotes] = useState(getNotes());\n  const [isFinished, setIsFinished] = useState(false);\n  const [finalResults, setFinalResults] = useState(null);\n\n  const handleAnswer = (questionId, optionIndex) => {\n    setUserAnswers({ ...userAnswers, [questionId]: optionIndex });\n  };\n\n  const handleNoteChange = (questionId, text) => {\n    const newNotes = { ...notes, [questionId]: text };\n    setNotes(newNotes);\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleSubmit = () => {\n    if (window.confirm('¿Estás seguro de que quieres finalizar el examen?')) {\n      // 1. Grade the test\n      let correctAnswersCount = 0;\n      const results = questions.map(q => {\n        const userAnswerIndex = userAnswers[q.id];\n        const isCorrect = (userAnswerIndex !== undefined) && q.options[userAnswerIndex]?.isCorrect;\n        if (isCorrect) {\n          correctAnswersCount++;\n        }\n        return {\n          ...q,\n          selectedOptionIndex: userAnswerIndex,\n          isCorrect: isCorrect || false,\n        };\n      });\n      const score = (correctAnswersCount / questions.length) * 100;\n\n      // 2. Save notes to localStorage\n      saveNotes(notes);\n\n      // 3. Save test result to history in localStorage\n      const history = getHistory();\n      const newTestResult = {\n        _id: new Date().toISOString(), // Unique ID for the test\n        createdAt: new Date(),\n        score,\n        numberOfQuestions: questions.length,\n        results, // Save full results for review\n      };\n      saveHistory([...history, newTestResult]);\n\n      // 4. Update state to show results\n      setFinalResults({ results, score });\n      setIsFinished(true);\n    }\n  };\n  \n  const handleRestart = () => {\n      window.location.reload();\n  }\n\n  if (isFinished && finalResults) {\n    return <ResultsDisplay results={finalResults.results} score={finalResults.score} onRestart={handleRestart} />;\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <div className=\"test-taker-container\">\n      <div className=\"test-header\">\n        <h2>Simulacro de Examen</h2>\n        <div className=\"progress-indicator\">Pregunta {currentQuestionIndex + 1} de {questions.length}</div>\n      </div>\n      <QuestionDisplay\n        question={currentQuestion}\n        onAnswer={handleAnswer}\n        onNoteChange={handleNoteChange}\n        note={notes[currentQuestion.id] || ''}\n        userAnswerIndex={userAnswers[currentQuestion.id]}\n      />\n      <div className=\"navigation-buttons\">\n        <button onClick={handlePrevious} disabled={currentQuestionIndex === 0}>Anterior</button>\n        {currentQuestionIndex === questions.length - 1\n          ? <button onClick={handleSubmit} className=\"finish-btn\">Finalizar Examen</button>\n          : <button onClick={handleNext}>Siguiente</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default TestTaker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}