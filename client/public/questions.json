[
  {
    "id": "q1",
    "questionText": "Which AWS service offers a simple and scalable file storage for use with Amazon EC2 instances, based on the NFS protocol?",
    "options": [
      {
        "text": "Amazon S3",
        "isCorrect": false
      },
      {
        "text": "Amazon EBS",
        "isCorrect": false
      },
      {
        "text": "Amazon EFS",
        "isCorrect": true
      },
      {
        "text": "Amazon Glacier",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon EFS (Elastic File System) provides a scalable network file system (NFS) that can be mounted on multiple EC2 instances simultaneously.",
    "awsService": "EFS"
  },
  {
    "id": "q2",
    "questionText": "A company wants to run a high-performance computing (HPC) workload. Which EC2 purchasing option is MOST cost-effective for a short-term, interruptible job?",
    "options": [
      {
        "text": "On-Demand Instances",
        "isCorrect": false
      },
      {
        "text": "Reserved Instances",
        "isCorrect": false
      },
      {
        "text": "Spot Instances",
        "isCorrect": true
      },
      {
        "text": "Dedicated Hosts",
        "isCorrect": false
      }
    ],
    "explanation": "Spot Instances offer the largest discounts on EC2 compute capacity and are ideal for fault-tolerant, interruptible workloads like HPC.",
    "awsService": "EC2"
  },
  {
    "id": "q3",
    "questionText": "What is the primary purpose of an Internet Gateway (IGW) in an Amazon VPC?",
    "options": [
      {
        "text": "To provide a private connection between a VPC and another VPC.",
        "isCorrect": false
      },
      {
        "text": "To enable instances in the VPC to access the internet.",
        "isCorrect": true
      },
      {
        "text": "To provide a secure connection to an on-premises network.",
        "isCorrect": false
      },
      {
        "text": "To load balance traffic between multiple EC2 instances.",
        "isCorrect": false
      }
    ],
    "explanation": "An Internet Gateway is a VPC component that allows communication between your VPC and the internet.",
    "awsService": "VPC"
  },
  {
    "id": "q4",
    "questionText": "Which service is designed for durable, long-term, low-cost storage for data archiving?",
    "options": [
      {
        "text": "Amazon S3 Standard",
        "isCorrect": false
      },
      {
        "text": "Amazon EBS",
        "isCorrect": false
      },
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon S3 Glacier Deep Archive",
        "isCorrect": true
      }
    ],
    "explanation": "Amazon S3 Glacier Deep Archive is Amazon S3â€™s lowest-cost storage class for long-term retention of data that is accessed rarely.",
    "awsService": "S3"
  },
  {
    "id": "q5",
    "questionText": "To ensure high availability for an application on EC2, where should you deploy the instances?",
    "options": [
      {
        "text": "In a single, large EC2 instance.",
        "isCorrect": false
      },
      {
        "text": "Across multiple Availability Zones.",
        "isCorrect": true
      },
      {
        "text": "Across multiple AWS Regions.",
        "isCorrect": false
      },
      {
        "text": "In a single placement group.",
        "isCorrect": false
      }
    ],
    "explanation": "Deploying instances across multiple Availability Zones (AZs) ensures that if one AZ fails, the application remains available in other AZs.",
    "awsService": "EC2"
  },
  {
    "id": "q6",
    "questionText": "What AWS service allows you to manage users and their access to AWS services and resources?",
    "options": [
      {
        "text": "AWS Shield",
        "isCorrect": false
      },
      {
        "text": "AWS Key Management Service (KMS)",
        "isCorrect": false
      },
      {
        "text": "AWS Identity and Access Management (IAM)",
        "isCorrect": true
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      }
    ],
    "explanation": "IAM is the service used to securely control access to AWS resources. You use IAM to control who is authenticated (signed in) and authorized (has permissions) to use resources.",
    "awsService": "IAM"
  },
  {
    "id": "q7",
    "questionText": "A web application needs a managed relational database. Which AWS service is the most appropriate choice?",
    "options": [
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      },
      {
        "text": "Amazon RDS",
        "isCorrect": true
      },
      {
        "text": "Amazon ElastiCache",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Relational Database Service (RDS) is a managed service that makes it easy to set up, operate, and scale a relational database in the cloud.",
    "awsService": "RDS"
  },
  {
    "id": "q8",
    "questionText": "Which service can be used to deliver web content to users with low latency by caching it at edge locations?",
    "options": [
      {
        "text": "Amazon Route 53",
        "isCorrect": false
      },
      {
        "text": "Amazon CloudFront",
        "isCorrect": true
      },
      {
        "text": "Elastic Load Balancing",
        "isCorrect": false
      },
      {
        "text": "AWS Direct Connect",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon CloudFront is a content delivery network (CDN) service that securely delivers data, videos, applications, and APIs to customers globally with low latency and high transfer speeds.",
    "awsService": "CloudFront"
  },
  {
    "id": "q9",
    "questionText": "What is the function of a NAT Gateway in a VPC?",
    "options": [
      {
        "text": "To allow instances in a public subnet to access the internet.",
        "isCorrect": false
      },
      {
        "text": "To allow instances in a private subnet to access the internet, while preventing the internet from initiating connections with those instances.",
        "isCorrect": true
      },
      {
        "text": "To filter traffic between subnets.",
        "isCorrect": false
      },
      {
        "text": "To create a VPN connection to an on-premises network.",
        "isCorrect": false
      }
    ],
    "explanation": "A NAT Gateway allows instances in a private subnet to connect to the internet or other AWS services, but prevents the internet from initiating a connection with those instances.",
    "awsService": "VPC"
  },
  {
    "id": "q10",
    "questionText": "Which AWS service provides a fully managed NoSQL database service?",
    "options": [
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon Aurora",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": true
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon DynamoDB is a key-value and document database that delivers single-digit millisecond performance at any scale.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q11",
    "questionText": "An EC2 instance needs to access an S3 bucket securely without storing AWS credentials on the instance. What is the recommended approach?",
    "options": [
      {
        "text": "Store credentials in a file and restrict file permissions.",
        "isCorrect": false
      },
      {
        "text": "Use an IAM Role attached to the EC2 instance.",
        "isCorrect": true
      },
      {
        "text": "Hardcode the credentials in the application.",
        "isCorrect": false
      },
      {
        "text": "Pass credentials to the instance via User Data.",
        "isCorrect": false
      }
    ],
    "explanation": "IAM Roles for EC2 instances provide temporary security credentials that applications can use to make AWS calls, which is the most secure and recommended method.",
    "awsService": "IAM"
  },
  {
    "id": "q12",
    "questionText": "What is the purpose of an Auto Scaling group?",
    "options": [
      {
        "text": "To manually scale EC2 instances up or down.",
        "isCorrect": false
      },
      {
        "text": "To automatically adjust the number of EC2 instances in response to traffic or a schedule.",
        "isCorrect": true
      },
      {
        "text": "To distribute traffic across multiple instances.",
        "isCorrect": false
      },
      {
        "text": "To create a backup of an EC2 instance.",
        "isCorrect": false
      }
    ],
    "explanation": "Auto Scaling helps you maintain application availability and allows you to automatically add or remove EC2 instances according to conditions you define.",
    "awsService": "EC2"
  },
  {
    "id": "q13",
    "questionText": "Which S3 storage class is best for data with unpredictable access patterns?",
    "options": [
      {
        "text": "S3 Standard",
        "isCorrect": false
      },
      {
        "text": "S3 Intelligent-Tiering",
        "isCorrect": true
      },
      {
        "text": "S3 Standard-IA",
        "isCorrect": false
      },
      {
        "text": "S3 One Zone-IA",
        "isCorrect": false
      }
    ],
    "explanation": "S3 Intelligent-Tiering is designed to optimize costs by automatically moving data to the most cost-effective access tier, without performance impact or operational overhead.",
    "awsService": "S3"
  },
  {
    "id": "q14",
    "questionText": "What component of a VPC controls inbound and outbound traffic for an EC2 instance?",
    "options": [
      {
        "text": "Route Table",
        "isCorrect": false
      },
      {
        "text": "Network ACL",
        "isCorrect": false
      },
      {
        "text": "Security Group",
        "isCorrect": true
      },
      {
        "text": "Internet Gateway",
        "isCorrect": false
      }
    ],
    "explanation": "A Security Group acts as a virtual firewall for your instance to control inbound and outbound traffic. It is stateful.",
    "awsService": "VPC"
  },
  {
    "id": "q15",
    "questionText": "Which service allows you to run code without provisioning or managing servers?",
    "options": [
      {
        "text": "Amazon EC2",
        "isCorrect": false
      },
      {
        "text": "Amazon Lightsail",
        "isCorrect": false
      },
      {
        "text": "AWS Lambda",
        "isCorrect": true
      },
      {
        "text": "Amazon EKS",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Lambda is a serverless compute service that lets you run code without provisioning or managing servers. You pay only for the compute time you consume.",
    "awsService": "Lambda"
  },
  {
    "id": "q16",
    "questionText": "You need to create a decoupled architecture for an application that processes messages. Which service is a fully managed message queuing service?",
    "options": [
      {
        "text": "Amazon SNS",
        "isCorrect": false
      },
      {
        "text": "Amazon SQS",
        "isCorrect": true
      },
      {
        "text": "Amazon MQ",
        "isCorrect": false
      },
      {
        "text": "AWS Step Functions",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications.",
    "awsService": "SQS"
  },
  {
    "id": "q17",
    "questionText": "What is the difference between a public subnet and a private subnet in a VPC?",
    "options": [
      {
        "text": "A public subnet has a route to an Internet Gateway, while a private subnet does not.",
        "isCorrect": true
      },
      {
        "text": "A public subnet can contain EC2 instances, while a private subnet cannot.",
        "isCorrect": false
      },
      {
        "text": "A public subnet is in one Availability Zone, a private subnet is in another.",
        "isCorrect": false
      },
      {
        "text": "A public subnet uses public IP addresses, a private subnet uses private IP addresses.",
        "isCorrect": false
      }
    ],
    "explanation": "The key differentiator is routing. If a subnet's route table has a route to an Internet Gateway (IGW), it is a public subnet. Otherwise, it is a private subnet.",
    "awsService": "VPC"
  },
  {
    "id": "q18",
    "questionText": "Which AWS service provides a way to model and provision your entire cloud environment as code?",
    "options": [
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "AWS CloudFormation",
        "isCorrect": true
      },
      {
        "text": "AWS OpsWorks",
        "isCorrect": false
      },
      {
        "text": "AWS Service Catalog",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CloudFormation provides a common language to describe and provision all the infrastructure resources in your cloud environment.",
    "awsService": "CloudFormation"
  },
  {
    "id": "q19",
    "questionText": "Which type of Elastic Load Balancer is best suited for load balancing HTTP and HTTPS traffic with advanced request routing?",
    "options": [
      {
        "text": "Classic Load Balancer",
        "isCorrect": false
      },
      {
        "text": "Network Load Balancer",
        "isCorrect": false
      },
      {
        "text": "Application Load Balancer",
        "isCorrect": true
      },
      {
        "text": "Gateway Load Balancer",
        "isCorrect": false
      }
    ],
    "explanation": "Application Load Balancer (ALB) operates at the application layer (Layer 7) and allows you to define routing rules based on content, such as path or hostname.",
    "awsService": "ELB"
  },
  {
    "id": "q20",
    "questionText": "What is the most resilient and lowest-cost S3 storage class for data that is accessed less than once a month but requires millisecond access?",
    "options": [
      {
        "text": "S3 Standard",
        "isCorrect": false
      },
      {
        "text": "S3 Standard-Infrequent Access (S3 Standard-IA)",
        "isCorrect": true
      },
      {
        "text": "S3 One Zone-Infrequent Access (S3 One Zone-IA)",
        "isCorrect": false
      },
      {
        "text": "S3 Glacier Flexible Retrieval",
        "isCorrect": false
      }
    ],
    "explanation": "S3 Standard-IA is for data that is accessed less frequently, but requires rapid access when needed. It offers the high durability, throughput, and low latency of S3 Standard, with a low per-GB storage price and per-GB retrieval fee.",
    "awsService": "S3"
  },
  {
    "id": "q21",
    "questionText": "Which AWS service helps you to protect your web applications from common web exploits like SQL injection and cross-site scripting?",
    "options": [
      {
        "text": "AWS Shield",
        "isCorrect": false
      },
      {
        "text": "Amazon GuardDuty",
        "isCorrect": false
      },
      {
        "text": "AWS WAF",
        "isCorrect": true
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      }
    ],
    "explanation": "AWS WAF is a web application firewall that helps protect your web applications or APIs against common web exploits that may affect availability, compromise security, or consume excessive resources.",
    "awsService": "WAF"
  },
  {
    "id": "q22",
    "questionText": "What is the concept of an 'Availability Zone' in AWS?",
    "options": [
      {
        "text": "A separate geographic area, like North America or Europe.",
        "isCorrect": false
      },
      {
        "text": "One or more discrete data centers with redundant power, networking, and connectivity within an AWS Region.",
        "isCorrect": true
      },
      {
        "text": "A specific location where content is cached for low latency.",
        "isCorrect": false
      },
      {
        "text": "A virtual private network in the AWS cloud.",
        "isCorrect": false
      }
    ],
    "explanation": "An Availability Zone (AZ) is a distinct location within an AWS Region that is insulated from failures in other AZs, and provides inexpensive, low-latency network connectivity to other AZs in the same Region.",
    "awsService": "Global Infrastructure"
  },
  {
    "id": "q23",
    "questionText": "You need to monitor the performance of your EC2 instances, such as CPU utilization. Which service provides this data by default?",
    "options": [
      {
        "text": "AWS CloudTrail",
        "isCorrect": false
      },
      {
        "text": "Amazon CloudWatch",
        "isCorrect": true
      },
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications you run on AWS in real time. It collects metrics like CPU utilization, network I/O, and disk I/O for EC2 instances.",
    "awsService": "CloudWatch"
  },
  {
    "id": "q24",
    "questionText": "Which AWS database service is a MySQL and PostgreSQL-compatible relational database built for the cloud, that provides the performance and availability of commercial-grade databases at 1/10th the cost?",
    "options": [
      {
        "text": "Amazon RDS for MySQL",
        "isCorrect": false
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      },
      {
        "text": "Amazon Aurora",
        "isCorrect": true
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Aurora is a relational database service that combines the performance and availability of high-end commercial databases with the simplicity and cost-effectiveness of open source databases.",
    "awsService": "Aurora"
  },
  {
    "id": "q25",
    "questionText": "What is the purpose of a Network ACL in a VPC?",
    "options": [
      {
        "text": "To act as a firewall for associated subnets, controlling both inbound and outbound traffic at the subnet level.",
        "isCorrect": true
      },
      {
        "text": "To act as a firewall for associated EC2 instances.",
        "isCorrect": false
      },
      {
        "text": "To route traffic between subnets.",
        "isCorrect": false
      },
      {
        "text": "To provide a DNS service for the VPC.",
        "isCorrect": false
      }
    ],
    "explanation": "A Network Access Control List (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. It is stateless.",
    "awsService": "VPC"
  },
  {
    "id": "q26",
    "questionText": "A company wants to establish a dedicated, private network connection from their on-premises data center to AWS. Which service should they use?",
    "options": [
      {
        "text": "AWS VPN",
        "isCorrect": false
      },
      {
        "text": "AWS Direct Connect",
        "isCorrect": true
      },
      {
        "text": "VPC Peering",
        "isCorrect": false
      },
      {
        "text": "Internet Gateway",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Direct Connect is a cloud service solution that makes it easy to establish a dedicated network connection from your premises to AWS, which can reduce network costs, increase bandwidth throughput, and provide a more consistent network experience than internet-based connections.",
    "awsService": "Direct Connect"
  },
  {
    "id": "q27",
    "questionText": "Which AWS service is used to send notifications to a large number of subscribers through multiple protocols like HTTP, email, and SQS?",
    "options": [
      {
        "text": "Amazon SQS",
        "isCorrect": false
      },
      {
        "text": "Amazon Kinesis",
        "isCorrect": false
      },
      {
        "text": "Amazon SNS",
        "isCorrect": true
      },
      {
        "text": "AWS Lambda",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Simple Notification Service (SNS) is a fully managed messaging service for both application-to-application (A2A) and application-to-person (A2P) communication. It uses a publish/subscribe model.",
    "awsService": "SNS"
  },
  {
    "id": "q28",
    "questionText": "What is an EBS Volume?",
    "options": [
      {
        "text": "A network file system for use with EC2 instances.",
        "isCorrect": false
      },
      {
        "text": "A durable, block-level storage device that you can attach to a single EC2 instance.",
        "isCorrect": true
      },
      {
        "text": "Object storage for files, accessible from anywhere.",
        "isCorrect": false
      },
      {
        "text": "A managed relational database.",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Elastic Block Store (EBS) provides persistent block storage volumes for use with Amazon EC2 instances. Each EBS volume is automatically replicated within its Availability Zone to protect you from component failure.",
    "awsService": "EBS"
  },
  {
    "id": "q29",
    "questionText": "Which Route 53 routing policy would you use to route traffic to multiple resources in proportions that you specify?",
    "options": [
      {
        "text": "Simple routing policy",
        "isCorrect": false
      },
      {
        "text": "Failover routing policy",
        "isCorrect": false
      },
      {
        "text": "Weighted routing policy",
        "isCorrect": true
      },
      {
        "text": "Latency routing policy",
        "isCorrect": false
      }
    ],
    "explanation": "Weighted routing lets you associate multiple resources with a single domain name and choose how much traffic is routed to each resource. This can be useful for A/B testing.",
    "awsService": "Route 53"
  },
  {
    "id": "q30",
    "questionText": "To save costs, a company wants to shut down EC2 instances that are not in use during weekends. Which service or feature can automate this process?",
    "options": [
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "Amazon CloudWatch Alarms",
        "isCorrect": false
      },
      {
        "text": "Auto Scaling with a scheduled scaling policy",
        "isCorrect": true
      },
      {
        "text": "AWS CloudTrail",
        "isCorrect": false
      }
    ],
    "explanation": "Scheduled scaling policies for Auto Scaling Groups allow you to scale your application in response to predictable load changes. You can create a policy to scale down to zero instances on Friday evening and scale back up on Monday morning.",
    "awsService": "Auto Scaling"
  },
  {
    "id": "q31",
    "questionText": "What does 'S3 Cross-Region Replication' do?",
    "options": [
      {
        "text": "It encrypts all data in an S3 bucket automatically.",
        "isCorrect": false
      },
      {
        "text": "It automatically copies objects across S3 buckets in different AWS Regions.",
        "isCorrect": true
      },
      {
        "text": "It provides a CDN for S3 objects.",
        "isCorrect": false
      },
      {
        "text": "It archives S3 objects to a lower-cost storage tier.",
        "isCorrect": false
      }
    ],
    "explanation": "Cross-Region Replication (CRR) is an Amazon S3 feature that automatically replicates data from a source S3 bucket in one AWS Region to a destination bucket in a different AWS Region for compliance, disaster recovery, or latency reduction.",
    "awsService": "S3"
  },
  {
    "id": "q32",
    "questionText": "Which IAM entity should be used to grant an application running on an EC2 instance permissions to access other AWS resources?",
    "options": [
      {
        "text": "IAM User",
        "isCorrect": false
      },
      {
        "text": "IAM Group",
        "isCorrect": false
      },
      {
        "text": "IAM Role",
        "isCorrect": true
      },
      {
        "text": "IAM Policy",
        "isCorrect": false
      }
    ],
    "explanation": "An IAM Role is an IAM identity that you can create in your account that has specific permissions. Instead of creating and sharing long-term credentials, you can attach a role to an EC2 instance to give it temporary permissions.",
    "awsService": "IAM"
  },
  {
    "id": "q33",
    "questionText": "Which AWS service is a data warehouse that makes it simple and cost-effective to analyze all your data using standard SQL?",
    "options": [
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": true
      },
      {
        "text": "Amazon Athena",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Redshift is a fully managed, petabyte-scale data warehouse service in the cloud. It is optimized for high-performance analysis and reporting of large datasets.",
    "awsService": "Redshift"
  },
  {
    "id": "q34",
    "questionText": "What is the purpose of a VPC Endpoint?",
    "options": [
      {
        "text": "To allow secure, private connectivity to AWS services from within a VPC without traversing the public internet.",
        "isCorrect": true
      },
      {
        "text": "To connect two VPCs together.",
        "isCorrect": false
      },
      {
        "text": "To establish a VPN connection to an on-premises data center.",
        "isCorrect": false
      },
      {
        "text": "To provide a public IP address to an EC2 instance.",
        "isCorrect": false
      }
    ],
    "explanation": "VPC Endpoints enable you to privately connect your VPC to supported AWS services and VPC endpoint services powered by AWS PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection.",
    "awsService": "VPC"
  },
  {
    "id": "q35",
    "questionText": "You need to ensure that objects uploaded to an S3 bucket cannot be deleted or overwritten by any user for a specific period. Which S3 feature should you use?",
    "options": [
      {
        "text": "S3 Versioning",
        "isCorrect": false
      },
      {
        "text": "S3 Object Lock",
        "isCorrect": true
      },
      {
        "text": "S3 Bucket Policies",
        "isCorrect": false
      },
      {
        "text": "S3 Access Control Lists (ACLs)",
        "isCorrect": false
      }
    ],
    "explanation": "S3 Object Lock can help you prevent objects from being deleted or overwritten for a fixed amount of time or indefinitely. It uses a write-once-read-many (WORM) model and is useful for compliance and data protection.",
    "awsService": "S3"
  },
  {
    "id": "q36",
    "questionText": "Which type of EBS volume is recommended for the boot volume of most general-purpose EC2 instances?",
    "options": [
      {
        "text": "Provisioned IOPS SSD (io1/io2)",
        "isCorrect": false
      },
      {
        "text": "General Purpose SSD (gp2/gp3)",
        "isCorrect": true
      },
      {
        "text": "Throughput Optimized HDD (st1)",
        "isCorrect": false
      },
      {
        "text": "Cold HDD (sc1)",
        "isCorrect": false
      }
    ],
    "explanation": "General Purpose SSD volumes (gp2 and gp3) offer a balance of price and performance for a wide variety of transactional workloads, making them the default and recommended choice for boot volumes.",
    "awsService": "EBS"
  },
  {
    "id": "q37",
    "questionText": "Which service would you use to register a new domain name and manage its DNS records?",
    "options": [
      {
        "text": "Amazon CloudFront",
        "isCorrect": false
      },
      {
        "text": "Elastic Load Balancing",
        "isCorrect": false
      },
      {
        "text": "Amazon Route 53",
        "isCorrect": true
      },
      {
        "text": "AWS Certificate Manager",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Route 53 is a scalable and highly available Domain Name System (DNS) web service. You can use it to register domain names and route end users to internet applications.",
    "awsService": "Route 53"
  },
  {
    "id": "q38",
    "questionText": "What is the AWS Shared Responsibility Model?",
    "options": [
      {
        "text": "AWS is responsible for all aspects of security.",
        "isCorrect": false
      },
      {
        "text": "The customer is responsible for all aspects of security.",
        "isCorrect": false
      },
      {
        "text": "AWS is responsible for security 'of' the cloud, while the customer is responsible for security 'in' the cloud.",
        "isCorrect": true
      },
      {
        "text": "Security responsibilities are negotiated on a per-service basis.",
        "isCorrect": false
      }
    ],
    "explanation": "The Shared Responsibility Model dictates that AWS manages the security of the underlying cloud infrastructure (hardware, software, networking), while the customer is responsible for securing their data, applications, and configurations within the cloud.",
    "awsService": "Security"
  },
  {
    "id": "q39",
    "questionText": "How can you provide short-term, expiring access to an S3 object for a user without AWS credentials?",
    "options": [
      {
        "text": "Make the object public.",
        "isCorrect": false
      },
      {
        "text": "Create an IAM user for them.",
        "isCorrect": false
      },
      {
        "text": "Use an S3 Pre-Signed URL.",
        "isCorrect": true
      },
      {
        "text": "Use an S3 Bucket Policy.",
        "isCorrect": false
      }
    ],
    "explanation": "A pre-signed URL gives you access to the object identified in the URL, provided that the creator of the pre-signed URL has permissions to access that object. It has a configurable expiration time.",
    "awsService": "S3"
  },
  {
    "id": "q40",
    "questionText": "Which AWS service provides a managed, in-memory cache service?",
    "options": [
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB Accelerator (DAX)",
        "isCorrect": false
      },
      {
        "text": "Amazon ElastiCache",
        "isCorrect": true
      },
      {
        "text": "Amazon EFS",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon ElastiCache is a web service that makes it easy to deploy, operate, and scale an in-memory cache in the cloud. It supports two open-source in-memory caching engines: Redis and Memcached.",
    "awsService": "ElastiCache"
  },
  {
    "id": "q41",
    "questionText": "What is the primary benefit of using an Application Load Balancer (ALB) over a Classic Load Balancer (CLB)?",
    "options": [
      {
        "text": "ALB can handle TCP traffic at any port.",
        "isCorrect": false
      },
      {
        "text": "ALB supports content-based routing rules, such as path-based routing.",
        "isCorrect": true
      },
      {
        "text": "ALB has a fixed, static IP address.",
        "isCorrect": false
      },
      {
        "text": "ALB is free of charge.",
        "isCorrect": false
      }
    ],
    "explanation": "The key advantage of an ALB is its ability to operate at the application layer (Layer 7) and route traffic based on the content of the request, such as the URL path or hostname, allowing for more flexible application architectures.",
    "awsService": "ELB"
  },
  {
    "id": "q42",
    "questionText": "An organization needs to audit all API calls made to their AWS account for security analysis and compliance. Which service should be used?",
    "options": [
      {
        "text": "Amazon CloudWatch",
        "isCorrect": false
      },
      {
        "text": "AWS CloudTrail",
        "isCorrect": true
      },
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CloudTrail is a service that enables governance, compliance, operational auditing, and risk auditing of your AWS account. It logs every API call, providing a detailed history of who did what, when, and from where.",
    "awsService": "CloudTrail"
  },
  {
    "id": "q43",
    "questionText": "Which feature of Amazon RDS allows for improved database availability by creating a synchronous standby replica in a different Availability Zone?",
    "options": [
      {
        "text": "Read Replicas",
        "isCorrect": false
      },
      {
        "text": "Multi-AZ Deployment",
        "isCorrect": true
      },
      {
        "text": "Automated Backups",
        "isCorrect": false
      },
      {
        "text": "Database Snapshots",
        "isCorrect": false
      }
    ],
    "explanation": "RDS Multi-AZ deployments provide enhanced availability and durability for RDS DB instances, making them a natural fit for production database workloads. When you provision a Multi-AZ DB instance, Amazon RDS automatically creates a primary DB instance and synchronously replicates the data to a standby instance in a different AZ.",
    "awsService": "RDS"
  },
  {
    "id": "q44",
    "questionText": "What is the most efficient way to transfer 100 TB of data from an on-premises data center to Amazon S3 with a slow and unreliable internet connection?",
    "options": [
      {
        "text": "AWS Direct Connect",
        "isCorrect": false
      },
      {
        "text": "AWS Snowball",
        "isCorrect": true
      },
      {
        "text": "AWS DataSync",
        "isCorrect": false
      },
      {
        "text": "S3 Transfer Acceleration",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Snowball is a petabyte-scale data transport solution that uses secure appliances to transfer large amounts of data into and out of the AWS cloud. It is ideal for situations where network connectivity is a bottleneck.",
    "awsService": "Snowball"
  },
  {
    "id": "q45",
    "questionText": "Which AWS service can be used to create a serverless API with endpoints that trigger AWS Lambda functions?",
    "options": [
      {
        "text": "Elastic Load Balancer",
        "isCorrect": false
      },
      {
        "text": "Amazon API Gateway",
        "isCorrect": true
      },
      {
        "text": "Amazon SQS",
        "isCorrect": false
      },
      {
        "text": "AWS Step Functions",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon API Gateway is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale. It can act as a 'front door' for applications to access data, business logic, or functionality from your back-end services, such as Lambda functions.",
    "awsService": "API Gateway"
  },
  {
    "id": "q46",
    "questionText": "A solutions architect needs to design a solution that can scale to handle thousands of write requests per second for a non-relational database. Which service is the best fit?",
    "options": [
      {
        "text": "Amazon RDS with Multi-AZ",
        "isCorrect": false
      },
      {
        "text": "Amazon Aurora",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": true
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon DynamoDB is a NoSQL database designed for high-performance, single-digit millisecond latency at any scale. It can easily handle thousands of read and write requests per second by provisioning the required capacity.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q47",
    "questionText": "What is the purpose of an S3 bucket policy?",
    "options": [
      {
        "text": "To control access to EC2 instances.",
        "isCorrect": false
      },
      {
        "text": "To define access permissions for an entire S3 bucket.",
        "isCorrect": true
      },
      {
        "text": "To manage DNS records for a domain.",
        "isCorrect": false
      },
      {
        "text": "To encrypt the data within an S3 bucket.",
        "isCorrect": false
      }
    ],
    "explanation": "Bucket policies are resource-based policies written in JSON that you attach to S3 buckets to manage access permissions for those buckets and the objects in them.",
    "awsService": "S3"
  },
  {
    "id": "q48",
    "questionText": "Which Route 53 routing policy is used to route users to the endpoint that provides the best performance, based on their geographic location?",
    "options": [
      {
        "text": "Geoproximity routing policy",
        "isCorrect": false
      },
      {
        "text": "Geolocation routing policy",
        "isCorrect": false
      },
      {
        "text": "Latency routing policy",
        "isCorrect": true
      },
      {
        "text": "Failover routing policy",
        "isCorrect": false
      }
    ],
    "explanation": "Latency routing policy is used when you have resources in multiple AWS Regions and you want to route viewers to the region that provides the lowest latency.",
    "awsService": "Route 53"
  },
  {
    "id": "q49",
    "questionText": "Which AWS service provides a threat detection service that continuously monitors for malicious activity and unauthorized behavior to protect your AWS accounts and workloads?",
    "options": [
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      },
      {
        "text": "AWS Shield",
        "isCorrect": false
      },
      {
        "text": "Amazon GuardDuty",
        "isCorrect": true
      },
      {
        "text": "AWS WAF",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon GuardDuty is an intelligent threat detection service that uses machine learning, anomaly detection, and integrated threat intelligence to identify and prioritize potential threats.",
    "awsService": "GuardDuty"
  },
  {
    "id": "q50",
    "questionText": "What is the difference between an EBS-backed and an Instance Store-backed EC2 instance?",
    "options": [
      {
        "text": "EBS-backed instance data persists independently of the instance's life, while Instance Store data is ephemeral and lost if the instance is stopped or terminated.",
        "isCorrect": true
      },
      {
        "text": "EBS-backed instances are free, while Instance Store-backed instances are not.",
        "isCorrect": false
      },
      {
        "text": "EBS-backed instances cannot be stopped, while Instance Store-backed instances can.",
        "isCorrect": false
      },
      {
        "text": "EBS-backed instances have lower performance than Instance Store-backed instances.",
        "isCorrect": false
      }
    ],
    "explanation": "The key difference is data persistence. EBS volumes are persistent network-attached storage, while Instance Store provides temporary, block-level storage located on disks that are physically attached to the host computer.",
    "awsService": "EC2"
  },
  {
    "id": "q51",
    "questionText": "A company needs to ensure that its S3 objects are stored in at least three geographically distant locations. How can this be achieved with a single S3 bucket?",
    "options": [
      {
        "text": "Use S3 Standard storage class.",
        "isCorrect": true
      },
      {
        "text": "Use S3 One Zone-IA storage class.",
        "isCorrect": false
      },
      {
        "text": "Enable Cross-Region Replication to two other regions.",
        "isCorrect": false
      },
      {
        "text": "This is not possible with a single bucket.",
        "isCorrect": false
      }
    ],
    "explanation": "The S3 Standard, Standard-IA, and Intelligent-Tiering storage classes automatically store data across a minimum of three Availability Zones within a single AWS Region, providing high durability and availability.",
    "awsService": "S3"
  },
  {
    "id": "q52",
    "questionText": "Which service can be used to orchestrate a complex workflow of multiple AWS Lambda functions?",
    "options": [
      {
        "text": "Amazon SQS",
        "isCorrect": false
      },
      {
        "text": "Amazon SNS",
        "isCorrect": false
      },
      {
        "text": "AWS Step Functions",
        "isCorrect": true
      },
      {
        "text": "Amazon Kinesis",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Step Functions lets you coordinate multiple AWS services into serverless workflows. You can design and run workflows that stitch together services such as AWS Lambda and Amazon SNS into feature-rich applications.",
    "awsService": "Step Functions"
  },
  {
    "id": "q53",
    "questionText": "What is the primary use case for Amazon RDS Read Replicas?",
    "options": [
      {
        "text": "To improve database availability during a failure.",
        "isCorrect": false
      },
      {
        "text": "To scale read-heavy database workloads.",
        "isCorrect": true
      },
      {
        "text": "To provide a cold backup of the database.",
        "isCorrect": false
      },
      {
        "text": "To encrypt the database data at rest.",
        "isCorrect": false
      }
    ],
    "explanation": "Read Replicas allow you to create one or more read-only copies of your primary database instance. This is useful for offloading read traffic from your primary instance to improve the performance of read-heavy applications.",
    "awsService": "RDS"
  },
  {
    "id": "q54",
    "questionText": "Which AWS service provides managed DDoS protection for applications running on AWS?",
    "options": [
      {
        "text": "AWS WAF",
        "isCorrect": false
      },
      {
        "text": "AWS Shield",
        "isCorrect": true
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      },
      {
        "text": "AWS Firewall Manager",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Shield is a managed Distributed Denial of Service (DDoS) protection service that safeguards applications running on AWS. AWS Shield Standard is enabled automatically at no extra cost.",
    "awsService": "Shield"
  },
  {
    "id": "q55",
    "questionText": "How can you grant users from an external identity provider (like Active Directory) access to your AWS account?",
    "options": [
      {
        "text": "Create an IAM user for each external user.",
        "isCorrect": false
      },
      {
        "text": "Use IAM Roles with identity federation (SAML 2.0 or OpenID Connect).",
        "isCorrect": true
      },
      {
        "text": "Share the root account credentials.",
        "isCorrect": false
      },
      {
        "text": "Use AWS Organizations.",
        "isCorrect": false
      }
    ],
    "explanation": "Identity federation allows you to manage user identities in an external system and give those users secure access to your AWS resources by assuming an IAM role, without ever creating IAM users for them.",
    "awsService": "IAM"
  },
  {
    "id": "q56",
    "questionText": "Which EC2 placement group strategy is recommended for applications that require low network latency and high network throughput between instances?",
    "options": [
      {
        "text": "Spread Placement Group",
        "isCorrect": false
      },
      {
        "text": "Partition Placement Group",
        "isCorrect": false
      },
      {
        "text": "Cluster Placement Group",
        "isCorrect": true
      },
      {
        "text": "Dispersed Placement Group",
        "isCorrect": false
      }
    ],
    "explanation": "A Cluster placement group is a logical grouping of instances within a single Availability Zone. It is ideal for applications that need low network latency, high network throughput, or both.",
    "awsService": "EC2"
  },
  {
    "id": "q57",
    "questionText": "What is the purpose of AWS Organizations?",
    "options": [
      {
        "text": "To manage infrastructure as code.",
        "isCorrect": false
      },
      {
        "text": "To centrally govern and manage multiple AWS accounts.",
        "isCorrect": true
      },
      {
        "text": "To monitor application performance.",
        "isCorrect": false
      },
      {
        "text": "To provide a private connection to AWS.",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Organizations helps you centrally govern your environment as you grow and scale your workloads on AWS. You can use it to manage billing, control access, compliance, and security, and share resources across your AWS accounts.",
    "awsService": "Organizations"
  },
  {
    "id": "q58",
    "questionText": "Which S3 feature can be used to automatically transition objects to a more cost-effective storage class as they age?",
    "options": [
      {
        "text": "S3 Versioning",
        "isCorrect": false
      },
      {
        "text": "S3 Lifecycle Policies",
        "isCorrect": true
      },
      {
        "text": "S3 Cross-Region Replication",
        "isCorrect": false
      },
      {
        "text": "S3 Event Notifications",
        "isCorrect": false
      }
    ],
    "explanation": "S3 Lifecycle configuration enables you to specify the lifecycle management of objects in a bucket. You can define rules to automatically transition objects to other storage classes or to expire objects after a certain period.",
    "awsService": "S3"
  },
  {
    "id": "q59",
    "questionText": "Which type of Elastic Load Balancer operates at the transport layer (Layer 4) and is capable of handling millions of requests per second with ultra-low latency?",
    "options": [
      {
        "text": "Application Load Balancer",
        "isCorrect": false
      },
      {
        "text": "Classic Load Balancer",
        "isCorrect": false
      },
      {
        "text": "Network Load Balancer",
        "isCorrect": true
      },
      {
        "text": "Gateway Load Balancer",
        "isCorrect": false
      }
    ],
    "explanation": "Network Load Balancer (NLB) is designed for extreme performance. It operates at the connection level (Layer 4), routing connections to targets based on IP protocol data.",
    "awsService": "ELB"
  },
  {
    "id": "q60",
    "questionText": "What is the most secure way to store sensitive configuration data, such as database passwords, for use by your applications running on AWS?",
    "options": [
      {
        "text": "Store them in a text file on an EC2 instance.",
        "isCorrect": false
      },
      {
        "text": "Store them in environment variables.",
        "isCorrect": false
      },
      {
        "text": "Use AWS Secrets Manager or AWS Systems Manager Parameter Store.",
        "isCorrect": true
      },
      {
        "text": "Hardcode them in the application source code.",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Secrets Manager and Parameter Store are dedicated services for securely storing and managing secrets. They provide encryption, access control, and rotation capabilities, which is far more secure than storing secrets in plaintext.",
    "awsService": "Secrets Manager"
  },
  {
    "id": "q61",
    "questionText": "A company wants to analyze data directly in Amazon S3 using standard SQL queries without loading it into a database. Which service should be used?",
    "options": [
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      },
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon Athena",
        "isCorrect": true
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using standard SQL. Athena is serverless, so there is no infrastructure to manage, and you pay only for the queries that you run.",
    "awsService": "Athena"
  },
  {
    "id": "q62",
    "questionText": "What is the purpose of a VPC peering connection?",
    "options": [
      {
        "text": "To connect a VPC to the public internet.",
        "isCorrect": false
      },
      {
        "text": "To connect a VPC to an on-premises data center.",
        "isCorrect": false
      },
      {
        "text": "To privately connect two VPCs, enabling them to communicate as if they are on the same network.",
        "isCorrect": true
      },
      {
        "text": "To distribute traffic between two VPCs.",
        "isCorrect": false
      }
    ],
    "explanation": "A VPC peering connection is a networking connection between two VPCs that enables you to route traffic between them using private IPv4 addresses or IPv6 addresses.",
    "awsService": "VPC"
  },
  {
    "id": "q63",
    "questionText": "Which AWS service provides a managed Kubernetes service?",
    "options": [
      {
        "text": "Amazon ECS",
        "isCorrect": false
      },
      {
        "text": "Amazon EKS",
        "isCorrect": true
      },
      {
        "text": "AWS Fargate",
        "isCorrect": false
      },
      {
        "text": "AWS Lambda",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Elastic Kubernetes Service (EKS) is a managed service that you can use to run Kubernetes on AWS without needing to install, operate, and maintain your own Kubernetes control plane or nodes.",
    "awsService": "EKS"
  },
  {
    "id": "q64",
    "questionText": "To improve the security of the AWS root user, what is the recommended best practice?",
    "options": [
      {
        "text": "Share the root user credentials with all administrators.",
        "isCorrect": false
      },
      {
        "text": "Enable Multi-Factor Authentication (MFA) and do not use the root user for daily tasks.",
        "isCorrect": true
      },
      {
        "text": "Store the root user access key in the application code.",
        "isCorrect": false
      },
      {
        "text": "Use the root user for all administrative tasks to ensure full permissions.",
        "isCorrect": false
      }
    ],
    "explanation": "The root user has unrestricted access to all resources. The best practice is to lock it down with MFA and create separate IAM users with limited permissions for daily administrative tasks.",
    "awsService": "IAM"
  },
  {
    "id": "q65",
    "questionText": "Which S3 storage class is designed for non-critical, reproducible data that can be lost, at a lower cost than S3 Standard?",
    "options": [
      {
        "text": "S3 Standard-IA",
        "isCorrect": false
      },
      {
        "text": "S3 Intelligent-Tiering",
        "isCorrect": false
      },
      {
        "text": "S3 One Zone-Infrequent Access (S3 One Zone-IA)",
        "isCorrect": true
      },
      {
        "text": "S3 Glacier Flexible Retrieval",
        "isCorrect": false
      }
    ],
    "explanation": "S3 One Zone-IA is for data that is accessed less frequently, but requires rapid access when needed. Unlike other S3 Storage Classes which store data in a minimum of three Availability Zones (AZs), S3 One Zone-IA stores data in a single AZ and costs less than S3 Standard-IA.",
    "awsService": "S3"
  },
  {
    "id": "q66",
    "questionText": "What is AWS Fargate?",
    "options": [
      {
        "text": "A service for running serverless functions.",
        "isCorrect": false
      },
      {
        "text": "A serverless compute engine for containers that works with both Amazon ECS and EKS.",
        "isCorrect": true
      },
      {
        "text": "A managed relational database service.",
        "isCorrect": false
      },
      {
        "text": "A service for provisioning infrastructure as code.",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Fargate removes the need to provision and manage servers, lets you specify and pay for resources per application, and improves security through application isolation by design.",
    "awsService": "Fargate"
  },
  {
    "id": "q67",
    "questionText": "A solutions architect needs to ensure that all objects uploaded to an S3 bucket are encrypted. What is the simplest way to enforce this?",
    "options": [
      {
        "text": "Manually encrypt each object before uploading.",
        "isCorrect": false
      },
      {
        "text": "Enable default encryption on the S3 bucket.",
        "isCorrect": true
      },
      {
        "text": "Use a Lambda function to encrypt objects after they are uploaded.",
        "isCorrect": false
      },
      {
        "text": "Use AWS WAF to inspect and encrypt objects.",
        "isCorrect": false
      }
    ],
    "explanation": "You can configure your Amazon S3 bucket to use default encryption. When you enable default encryption, all new objects are encrypted when they are stored in the bucket, using the encryption method you specify (SSE-S3 or SSE-KMS).",
    "awsService": "S3"
  },
  {
    "id": "q68",
    "questionText": "Which AWS service can be used to automate the deployment of applications to EC2 instances?",
    "options": [
      {
        "text": "AWS CodeCommit",
        "isCorrect": false
      },
      {
        "text": "AWS CodeBuild",
        "isCorrect": false
      },
      {
        "text": "AWS CodeDeploy",
        "isCorrect": true
      },
      {
        "text": "AWS CodePipeline",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CodeDeploy is a fully managed deployment service that automates software deployments to a variety of compute services such as Amazon EC2, AWS Fargate, AWS Lambda, and your on-premises servers.",
    "awsService": "CodeDeploy"
  },
  {
    "id": "q69",
    "questionText": "What is the primary benefit of using Amazon Aurora over a standard MySQL RDS instance?",
    "options": [
      {
        "text": "It is a NoSQL database.",
        "isCorrect": false
      },
      {
        "text": "It offers significantly higher performance, availability, and durability with its cloud-native architecture.",
        "isCorrect": true
      },
      {
        "text": "It is free of charge.",
        "isCorrect": false
      },
      {
        "text": "It can only be accessed from within a VPC.",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Aurora features a distributed, fault-tolerant, self-healing storage system that auto-scales up to 128TB per database instance. It delivers high performance and availability with up to 15 low-latency read replicas, point-in-time recovery, continuous backup to Amazon S3, and replication across three Availability Zones (AZs).",
    "awsService": "Aurora"
  },
  {
    "id": "q70",
    "questionText": "Which AWS service would you use to create a full CI/CD pipeline to build, test, and deploy your application?",
    "options": [
      {
        "text": "AWS CodeDeploy",
        "isCorrect": false
      },
      {
        "text": "AWS CloudFormation",
        "isCorrect": false
      },
      {
        "text": "AWS CodePipeline",
        "isCorrect": true
      },
      {
        "text": "AWS CodeCommit",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates. It orchestrates the entire process, from source code (e.g., CodeCommit) to build (e.g., CodeBuild) to deployment (e.g., CodeDeploy).",
    "awsService": "CodePipeline"
  },
  {
    "id": "q71",
    "questionText": "What is the purpose of an Elastic IP address?",
    "options": [
      {
        "text": "To provide a private IP address for an EC2 instance.",
        "isCorrect": false
      },
      {
        "text": "To provide a static, public IPv4 address designed for dynamic cloud computing.",
        "isCorrect": true
      },
      {
        "text": "To automatically scale the number of IP addresses.",
        "isCorrect": false
      },
      {
        "text": "To load balance traffic across multiple IP addresses.",
        "isCorrect": false
      }
    ],
    "explanation": "An Elastic IP address is a static IPv4 address that you can associate with your account. You can mask the failure of an instance or software by rapidly remapping the address to another instance in your account.",
    "awsService": "EC2"
  },
  {
    "id": "q72",
    "questionText": "Which AWS service provides a managed container orchestration service for running Docker containers?",
    "options": [
      {
        "text": "AWS Lambda",
        "isCorrect": false
      },
      {
        "text": "Amazon Elastic Container Service (ECS)",
        "isCorrect": true
      },
      {
        "text": "Amazon EC2",
        "isCorrect": false
      },
      {
        "text": "AWS Batch",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon ECS is a highly scalable, high-performance container orchestration service that supports Docker containers and allows you to easily run and scale containerized applications on AWS.",
    "awsService": "ECS"
  },
  {
    "id": "q73",
    "questionText": "A company needs to store frequently accessed data with microsecond latency for a read-heavy application. Which service would be the best choice?",
    "options": [
      {
        "text": "Amazon S3",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB with DAX",
        "isCorrect": true
      },
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon DynamoDB Accelerator (DAX) is a fully managed, highly available, in-memory cache for DynamoDB that delivers up to a 10x performance improvement â€“ from milliseconds to microseconds â€“ even at millions of requests per second.",
    "awsService": "DAX"
  },
  {
    "id": "q74",
    "questionText": "What is the function of a Route Table in a VPC?",
    "options": [
      {
        "text": "To filter traffic entering a subnet.",
        "isCorrect": false
      },
      {
        "text": "To contain a set of rules, called routes, that are used to determine where network traffic from your subnet or gateway is directed.",
        "isCorrect": true
      },
      {
        "text": "To assign IP addresses to EC2 instances.",
        "isCorrect": false
      },
      {
        "text": "To act as a firewall for an EC2 instance.",
        "isCorrect": false
      }
    ],
    "explanation": "Each subnet in your VPC must be associated with a route table. The route table controls the routing for the subnet. A subnet can only be associated with one route table at a time, but you can associate multiple subnets with the same route table.",
    "awsService": "VPC"
  },
  {
    "id": "q75",
    "questionText": "Which AWS service allows you to assess, audit, and evaluate the configurations of your AWS resources?",
    "options": [
      {
        "text": "AWS CloudTrail",
        "isCorrect": false
      },
      {
        "text": "Amazon CloudWatch",
        "isCorrect": false
      },
      {
        "text": "AWS Config",
        "isCorrect": true
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Config is a service that enables you to assess, audit, and evaluate the configurations of your AWS resources. Config continuously monitors and records your AWS resource configurations and allows you to automate the evaluation of recorded configurations against desired configurations.",
    "awsService": "Config"
  },
  {
    "id": "q76",
    "questionText": "Which of the following is a primary benefit of the AWS Cloud's economies of scale?",
    "options": [
      {
        "text": "Increased latency for global users.",
        "isCorrect": false
      },
      {
        "text": "Variable monthly costs that are difficult to predict.",
        "isCorrect": false
      },
      {
        "text": "Lower pay-as-you-go prices as a result of AWS's massive scale.",
        "isCorrect": true
      },
      {
        "text": "The need to invest heavily in upfront hardware.",
        "isCorrect": false
      }
    ],
    "explanation": "Because AWS has hundreds of thousands of customers and aggregates usage, it can achieve higher economies of scale, which translates into lower pay-as-you-go prices for customers.",
    "awsService": "Cloud Economics"
  },
  {
    "id": "q77",
    "questionText": "What is the best way to secure a new AWS account?",
    "options": [
      {
        "text": "Use the root user for all tasks.",
        "isCorrect": false
      },
      {
        "text": "Enable MFA on the root user, create an IAM admin user, and use that for daily tasks.",
        "isCorrect": true
      },
      {
        "text": "Delete the root user account.",
        "isCorrect": false
      },
      {
        "text": "Store the root access keys in a public S3 bucket.",
        "isCorrect": false
      }
    ],
    "explanation": "Following the principle of least privilege, the root user should be secured with MFA and used only for tasks that require it. An IAM user with administrative privileges should be created for day-to-day management.",
    "awsService": "IAM"
  },
  {
    "id": "q78",
    "questionText": "An application requires a storage layer that can be shared across multiple EC2 instances and provides file-level locking. Which service is suitable?",
    "options": [
      {
        "text": "Amazon EBS",
        "isCorrect": false
      },
      {
        "text": "Amazon S3",
        "isCorrect": false
      },
      {
        "text": "Amazon EFS",
        "isCorrect": true
      },
      {
        "text": "Instance Store",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon EFS is a file storage service for use with Amazon EC2. EFS provides a file system interface, file system access semantics (such as strong consistency and file locking), and concurrently accessible storage for up to thousands of EC2 instances.",
    "awsService": "EFS"
  },
  {
    "id": "q79",
    "questionText": "Which AWS service can be used to provision the same infrastructure across multiple AWS accounts and regions in a standardized and repeatable way?",
    "options": [
      {
        "text": "AWS Elastic Beanstalk",
        "isCorrect": false
      },
      {
        "text": "AWS CloudFormation",
        "isCorrect": true
      },
      {
        "text": "AWS OpsWorks",
        "isCorrect": false
      },
      {
        "text": "Amazon EC2",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CloudFormation gives developers and systems administrators an easy way to create and manage a collection of related AWS resources, provisioning and updating them in an orderly and predictable fashion. Templates can be reused across accounts and regions.",
    "awsService": "CloudFormation"
  },
  {
    "id": "q80",
    "questionText": "What is the purpose of a 'golden image' in the context of EC2?",
    "options": [
      {
        "text": "A backup of an EBS volume.",
        "isCorrect": false
      },
      {
        "text": "A pre-configured Amazon Machine Image (AMI) that contains all necessary software and configurations.",
        "isCorrect": true
      },
      {
        "text": "A snapshot of a running EC2 instance.",
        "isCorrect": false
      },
      {
        "text": "A template for an AWS CloudFormation stack.",
        "isCorrect": false
      }
    ],
    "explanation": "A 'golden AMI' is a customized AMI that you create, which is pre-loaded with all the necessary software, patches, and configurations. This speeds up instance launch times and ensures consistency.",
    "awsService": "EC2"
  },
  {
    "id": "q81",
    "questionText": "Which design principle supports building a resilient architecture on AWS?",
    "options": [
      {
        "text": "Using a single, large EC2 instance for all components.",
        "isCorrect": false
      },
      {
        "text": "Assuming that infrastructure components will not fail.",
        "isCorrect": false
      },
      {
        "text": "Designing for failure and using multiple Availability Zones.",
        "isCorrect": true
      },
      {
        "text": "Storing all data in a single EBS volume.",
        "isCorrect": false
      }
    ],
    "explanation": "A core principle of designing for the cloud is to assume that failures will happen. By designing your architecture to be fault-tolerant and deploying across multiple AZs, you can build a highly resilient system.",
    "awsService": "Well-Architected Framework"
  },
  {
    "id": "q82",
    "questionText": "Which service is most appropriate for running a self-managed relational database on AWS, where you need full control over the operating system?",
    "options": [
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon Aurora",
        "isCorrect": false
      },
      {
        "text": "Running the database on an Amazon EC2 instance.",
        "isCorrect": true
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      }
    ],
    "explanation": "While RDS and Aurora are managed services, running your database directly on an EC2 instance gives you complete control over the database software, the underlying operating system, and its configuration. This is necessary when a specific configuration or database version not supported by RDS is required.",
    "awsService": "EC2"
  },
  {
    "id": "q83",
    "questionText": "What is the primary benefit of decoupling an application's components using a service like Amazon SQS?",
    "options": [
      {
        "text": "It increases the performance of individual components.",
        "isCorrect": false
      },
      {
        "text": "It allows the application to be deployed in a single Availability Zone.",
        "isCorrect": false
      },
      {
        "text": "It improves resilience by allowing components to fail independently without cascading failures.",
        "isCorrect": true
      },
      {
        "text": "It reduces the cost of data transfer between components.",
        "isCorrect": false
      }
    ],
    "explanation": "Decoupling means that the different components of your application can operate independently. If one component fails, the others can continue to work, and messages can be stored in the SQS queue until the failed component recovers. This increases the overall fault tolerance of the system.",
    "awsService": "SQS"
  },
  {
    "id": "q84",
    "questionText": "Which AWS service can be used to provide free, public SSL/TLS certificates for your domains?",
    "options": [
      {
        "text": "AWS Certificate Manager (ACM)",
        "isCorrect": true
      },
      {
        "text": "AWS Key Management Service (KMS)",
        "isCorrect": false
      },
      {
        "text": "AWS Secrets Manager",
        "isCorrect": false
      },
      {
        "text": "IAM Certificate Store",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Certificate Manager is a service that lets you easily provision, manage, and deploy public and private Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificates for use with AWS services and your internal connected resources. Public certificates from ACM are free.",
    "awsService": "ACM"
  },
  {
    "id": "q85",
    "questionText": "A company wants to analyze the cost of their AWS usage by department. What is the best way to achieve this?",
    "options": [
      {
        "text": "Create a separate AWS account for each department.",
        "isCorrect": false
      },
      {
        "text": "Use cost allocation tags to label resources by department.",
        "isCorrect": true
      },
      {
        "text": "Manually calculate the costs from the monthly bill.",
        "isCorrect": false
      },
      {
        "text": "Use Amazon CloudWatch to monitor costs.",
        "isCorrect": false
      }
    ],
    "explanation": "Cost allocation tags are labels that you can apply to AWS resources. After you activate cost allocation tags, AWS uses the tags to organize your resource costs on your cost allocation report, making it easier to categorize and track your AWS costs.",
    "awsService": "Cost Management"
  },
  {
    "id": "q86",
    "questionText": "Which of the following is a characteristic of Amazon S3?",
    "options": [
      {
        "text": "It is a block storage service.",
        "isCorrect": false
      },
      {
        "text": "It provides object storage with a flat namespace.",
        "isCorrect": true
      },
      {
        "text": "It can be mounted as a file system on an EC2 instance.",
        "isCorrect": false
      },
      {
        "text": "Data is automatically deleted after 30 days.",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon S3 is an object storage service. Unlike a file system with a hierarchical directory structure, S3 has a flat structure. You create buckets, and the buckets store objects (files).",
    "awsService": "S3"
  },
  {
    "id": "q87",
    "questionText": "What is the purpose of an EC2 instance's 'User Data' field?",
    "options": [
      {
        "text": "To store persistent application data.",
        "isCorrect": false
      },
      {
        "text": "To pass a script or configuration commands to an instance at launch.",
        "isCorrect": true
      },
      {
        "text": "To store the instance's private key.",
        "isCorrect": false
      },
      {
        "text": "To define the instance's IAM role.",
        "isCorrect": false
      }
    ],
    "explanation": "User data can be used to pass a script that will be executed when the instance starts. This is commonly used for bootstrapping, such as installing software, applying patches, or configuring the instance.",
    "awsService": "EC2"
  },
  {
    "id": "q88",
    "questionText": "Which AWS service provides a simple way to set up a new AWS environment with prescribed best practices, often for a specific workload like a WordPress site?",
    "options": [
      {
        "text": "Amazon EC2",
        "isCorrect": false
      },
      {
        "text": "Amazon Lightsail",
        "isCorrect": true
      },
      {
        "text": "AWS Elastic Beanstalk",
        "isCorrect": false
      },
      {
        "text": "AWS Lambda",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Lightsail is designed to be the easiest way to launch and manage a virtual private server with AWS. Lightsail plans include everything you need to jumpstart your project â€“ a virtual machine, SSD-based storage, data transfer, DNS management, and a static IP address â€“ for a low, predictable price.",
    "awsService": "Lightsail"
  },
  {
    "id": "q89",
    "questionText": "Which AWS service would you use to automate infrastructure provisioning and application deployment with less administrative overhead than CloudFormation?",
    "options": [
      {
        "text": "AWS OpsWorks",
        "isCorrect": false
      },
      {
        "text": "AWS Elastic Beanstalk",
        "isCorrect": true
      },
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "AWS Service Catalog",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Elastic Beanstalk is an easy-to-use service for deploying and scaling web applications and services. You simply upload your code, and Elastic Beanstalk automatically handles the deployment, from capacity provisioning, load balancing, and auto-scaling to application health monitoring.",
    "awsService": "Elastic Beanstalk"
  },
  {
    "id": "q90",
    "questionText": "What is the main difference between a Security Group and a Network ACL?",
    "options": [
      {
        "text": "Security Groups are stateless; Network ACLs are stateful.",
        "isCorrect": false
      },
      {
        "text": "Security Groups operate at the instance level; Network ACLs operate at the subnet level.",
        "isCorrect": true
      },
      {
        "text": "Security Groups can only have allow rules; Network ACLs can only have deny rules.",
        "isCorrect": false
      },
      {
        "text": "Security Groups are free; Network ACLs have a cost.",
        "isCorrect": false
      }
    ],
    "explanation": "The two key differences are scope and state. Security Groups are stateful firewalls that apply to individual instances. Network ACLs are stateless firewalls that apply to all traffic entering or exiting an entire subnet.",
    "awsService": "VPC"
  },
  {
    "id": "q91",
    "questionText": "Which AWS service provides a petabyte-scale data transport solution with on-board compute capabilities?",
    "options": [
      {
        "text": "AWS Snowball",
        "isCorrect": false
      },
      {
        "text": "AWS Snowball Edge",
        "isCorrect": true
      },
      {
        "text": "AWS Snowmobile",
        "isCorrect": false
      },
      {
        "text": "AWS DataSync",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Snowball Edge is a type of Snowball device with on-board storage and compute power for select AWS capabilities. Snowball Edge can undertake local processing and edge-computing workloads in addition to transferring data between your local environment and the AWS Cloud.",
    "awsService": "Snowball"
  },
  {
    "id": "q92",
    "questionText": "Which Route 53 routing policy would you use to route users to different endpoints based on their geographic location (e.g., country or continent)?",
    "options": [
      {
        "text": "Latency routing policy",
        "isCorrect": false
      },
      {
        "text": "Failover routing policy",
        "isCorrect": false
      },
      {
        "text": "Geolocation routing policy",
        "isCorrect": true
      },
      {
        "text": "Weighted routing policy",
        "isCorrect": false
      }
    ],
    "explanation": "Geolocation routing lets you choose the resources that serve your traffic based on the geographic location of your users, meaning the location that DNS queries originate from. For example, you might want all queries from Europe to be routed to an ELB load balancer in the Frankfurt region.",
    "awsService": "Route 53"
  },
  {
    "id": "q93",
    "questionText": "What is the concept of 'elasticity' in the AWS Cloud?",
    "options": [
      {
        "text": "The ability to pay for services with a flexible payment plan.",
        "isCorrect": false
      },
      {
        "text": "The ability of the infrastructure to scale resources up and down easily in response to demand.",
        "isCorrect": true
      },
      {
        "text": "The ability to connect physical data centers to the AWS network.",
        "isCorrect": false
      },
      {
        "text": "The ability to withstand a component failure without downtime.",
        "isCorrect": false
      }
    ],
    "explanation": "Elasticity is a fundamental concept of cloud computing. It refers to the ability to acquire resources as you need them and release resources when you no longer need them. In the cloud, you don't have to over-provision for peak load.",
    "awsService": "Cloud Concepts"
  },
  {
    "id": "q94",
    "questionText": "An application needs to publish messages to a large number of different subscribers simultaneously. Which service is best suited for this 'fan-out' scenario?",
    "options": [
      {
        "text": "Amazon SQS",
        "isCorrect": false
      },
      {
        "text": "Amazon SNS",
        "isCorrect": true
      },
      {
        "text": "AWS Lambda",
        "isCorrect": false
      },
      {
        "text": "Amazon Kinesis",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon SNS uses a publish-subscribe model where a single message published to an SNS topic can be delivered to multiple subscriber endpoints, such as SQS queues, Lambda functions, or HTTP endpoints. This is known as a fan-out pattern.",
    "awsService": "SNS"
  },
  {
    "id": "q95",
    "questionText": "Which type of EBS volume is designed for high-throughput, frequently accessed workloads such as big data analytics and data warehousing?",
    "options": [
      {
        "text": "General Purpose SSD (gp2/gp3)",
        "isCorrect": false
      },
      {
        "text": "Provisioned IOPS SSD (io1/io2)",
        "isCorrect": false
      },
      {
        "text": "Throughput Optimized HDD (st1)",
        "isCorrect": true
      },
      {
        "text": "Cold HDD (sc1)",
        "isCorrect": false
      }
    ],
    "explanation": "Throughput Optimized HDD (st1) volumes provide low-cost magnetic storage that defines performance in terms of throughput rather than IOPS. This volume type is a good fit for large, sequential workloads such as streaming workloads, big data, and log processing.",
    "awsService": "EBS"
  },
  {
    "id": "q96",
    "questionText": "What is the primary function of AWS Key Management Service (KMS)?",
    "options": [
      {
        "text": "To manage SSL/TLS certificates.",
        "isCorrect": false
      },
      {
        "text": "To create and manage cryptographic keys and control their use across a wide range of AWS services and in your applications.",
        "isCorrect": true
      },
      {
        "text": "To store and rotate database credentials.",
        "isCorrect": false
      },
      {
        "text": "To provide DDoS protection.",
        "isCorrect": false
      }
    ],
    "explanation": "AWS KMS makes it easy for you to create and manage cryptographic keys and control their use across a wide range of AWS services and in your applications. It is a secure and resilient service that uses hardware security modules that have been validated under FIPS 140-2.",
    "awsService": "KMS"
  },
  {
    "id": "q97",
    "questionText": "A company needs to ensure that an EC2 instance can be recovered if it is accidentally terminated. What should be enabled?",
    "options": [
      {
        "text": "Enable detailed monitoring.",
        "isCorrect": false
      },
      {
        "text": "Enable termination protection.",
        "isCorrect": true
      },
      {
        "text": "Attach an Elastic IP address.",
        "isCorrect": false
      },
      {
        "text": "Place the instance in a Spread Placement Group.",
        "isCorrect": false
      }
    ],
    "explanation": "To prevent your instance from being accidentally terminated, you can enable termination protection for that instance. The `DisableApiTermination` attribute controls whether the instance can be terminated using the console, CLI, or API.",
    "awsService": "EC2"
  },
  {
    "id": "q98",
    "questionText": "Which AWS service provides a way to connect your on-premises Active Directory to the AWS cloud?",
    "options": [
      {
        "text": "AWS IAM",
        "isCorrect": false
      },
      {
        "text": "Amazon Cognito",
        "isCorrect": false
      },
      {
        "text": "AWS Directory Service",
        "isCorrect": true
      },
      {
        "text": "AWS Organizations",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Directory Service for Microsoft Active Directory, also known as AWS Managed Microsoft AD, enables your directory-aware workloads and AWS services to use managed Active Directory in the AWS Cloud. You can also use AD Connector to redirect directory requests to your on-premises Active Directory.",
    "awsService": "Directory Service"
  },
  {
    "id": "q99",
    "questionText": "What is the maximum size of a single object that can be uploaded to Amazon S3?",
    "options": [
      {
        "text": "5 GB",
        "isCorrect": false
      },
      {
        "text": "5 TB",
        "isCorrect": true
      },
      {
        "text": "50 TB",
        "isCorrect": false
      },
      {
        "text": "There is no limit.",
        "isCorrect": false
      }
    ],
    "explanation": "The total volume of data and number of objects you can store in Amazon S3 are unlimited. Individual Amazon S3 objects can range in size from a minimum of 0 bytes to a maximum of 5 terabytes (TB).",
    "awsService": "S3"
  },
  {
    "id": "q100",
    "questionText": "Which AWS service can be used to provide a user-friendly alias or CNAME for an Application Load Balancer's DNS name?",
    "options": [
      {
        "text": "Amazon CloudFront",
        "isCorrect": false
      },
      {
        "text": "Amazon Route 53",
        "isCorrect": true
      },
      {
        "text": "AWS Certificate Manager",
        "isCorrect": false
      },
      {
        "text": "Elastic IP Address",
        "isCorrect": false
      }
    ],
    "explanation": "You can create an Alias record in Amazon Route 53 that points to your Application Load Balancer. An Alias record is a Route 53-specific type of record that lets you route traffic to selected AWS resources, such as CloudFront distributions and ELB load balancers.",
    "awsService": "Route 53"
  },
  {
    "id": "q101",
    "questionText": "Which of the following is a responsibility of the customer under the AWS Shared Responsibility Model?",
    "options": [
      {
        "text": "Patching the host operating system of an EC2 instance.",
        "isCorrect": false
      },
      {
        "text": "Managing the physical security of the data centers.",
        "isCorrect": false
      },
      {
        "text": "Configuring security groups and network ACLs.",
        "isCorrect": true
      },
      {
        "text": "Managing the hypervisor for virtualization.",
        "isCorrect": false
      }
    ],
    "explanation": "Under the Shared Responsibility Model, the customer is responsible for security 'in' the cloud. This includes managing the guest operating system (including updates and security patches), any application software or utilities installed by the customer on the instances, and the configuration of the AWS-provided firewall (called a security group) on each instance.",
    "awsService": "Security"
  },
  {
    "id": "q102",
    "questionText": "A company runs a critical application on a Multi-AZ RDS MySQL database. During a planned maintenance window, they need to perform a schema change that will take several hours. What is the BEST approach to minimize downtime while ensuring data consistency?",
    "options": [
      {
        "text": "Create a read replica, promote it to master, and perform the schema change.",
        "isCorrect": false
      },
      {
        "text": "Create a snapshot, restore it to a new instance, perform the schema change, and switch over.",
        "isCorrect": true
      },
      {
        "text": "Enable Multi-AZ failover and perform the schema change on the standby instance.",
        "isCorrect": false
      },
      {
        "text": "Use AWS Database Migration Service to migrate to a new database during the maintenance.",
        "isCorrect": false
      }
    ],
    "explanation": "The blue-green deployment approach using snapshots allows for testing the schema change on a copy of the production data before switching over, minimizing risk and downtime. Multi-AZ standby instances are synchronized replicas and can't have independent schema changes.",
    "awsService": "RDS"
  },
  {
    "id": "q103",
    "questionText": "An organization needs to implement a disaster recovery solution for their three-tier web application. The RTO requirement is 4 hours and RPO is 1 hour. Which AWS disaster recovery strategy would be MOST cost-effective while meeting these requirements?",
    "options": [
      {
        "text": "Backup and Restore",
        "isCorrect": false
      },
      {
        "text": "Pilot Light",
        "isCorrect": true
      },
      {
        "text": "Warm Standby",
        "isCorrect": false
      },
      {
        "text": "Multi-Site Active/Active",
        "isCorrect": false
      }
    ],
    "explanation": "Pilot Light strategy keeps critical core systems running in AWS (like database replication) but other systems are shut down. It can meet 4-hour RTO requirements cost-effectively. Backup/Restore typically takes longer than 4 hours for full application recovery, while Warm Standby and Multi-Site are more expensive.",
    "awsService": "Disaster Recovery"
  },
  {
    "id": "q104",
    "questionText": "A financial services company requires that all API calls to their AWS account be logged and stored for 7 years for compliance. The logs must be tamper-proof and searchable. What combination of services should be used?",
    "options": [
      {
        "text": "CloudTrail + S3 + S3 Glacier",
        "isCorrect": false
      },
      {
        "text": "CloudTrail + S3 + S3 Object Lock + Amazon Athena",
        "isCorrect": true
      },
      {
        "text": "CloudWatch Logs + S3 + AWS Config",
        "isCorrect": false
      },
      {
        "text": "AWS Config + CloudTrail + Amazon ElasticSearch",
        "isCorrect": false
      }
    ],
    "explanation": "CloudTrail logs all API calls, S3 stores the logs, S3 Object Lock ensures tamper-proof storage with WORM compliance, and Athena enables SQL-based searching of the log data. This combination meets all requirements for compliance logging.",
    "awsService": "CloudTrail"
  },
  {
    "id": "q105",
    "questionText": "A gaming company experiences highly variable traffic patterns with spikes during new game releases. Their application uses EC2 instances behind an Application Load Balancer. They want to optimize costs while maintaining performance. What combination of EC2 purchasing options should they use?",
    "options": [
      {
        "text": "100% On-Demand instances with Auto Scaling",
        "isCorrect": false
      },
      {
        "text": "100% Spot instances with multiple instance types",
        "isCorrect": false
      },
      {
        "text": "Reserved Instances for baseline + Spot instances for burst capacity",
        "isCorrect": true
      },
      {
        "text": "Dedicated Hosts for all instances",
        "isCorrect": false
      }
    ],
    "explanation": "A mixed strategy using Reserved Instances for predictable baseline capacity and Spot instances for burst traffic provides the best cost optimization. Reserved Instances offer significant savings for baseline load, while Spot instances provide cost-effective scaling for unpredictable spikes.",
    "awsService": "EC2"
  },
  {
    "id": "q106",
    "questionText": "An e-commerce application stores user session data in a DynamoDB table. During flash sales, the application experiences throttling errors despite provisioned capacity appearing sufficient. What is the MOST likely cause and solution?",
    "options": [
      {
        "text": "Hot partitions due to poor partition key design; implement a more distributed partition key",
        "isCorrect": true
      },
      {
        "text": "Insufficient read capacity; increase the read capacity units",
        "isCorrect": false
      },
      {
        "text": "Network latency; move DynamoDB to a different region",
        "isCorrect": false
      },
      {
        "text": "Application logic errors; implement exponential backoff",
        "isCorrect": false
      }
    ],
    "explanation": "Hot partitions occur when the partition key doesn't distribute traffic evenly across partitions. During flash sales, if session data uses predictable keys (like sequential user IDs), traffic concentrates on specific partitions causing throttling. A well-distributed partition key strategy is essential.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q107",
    "questionText": "A company wants to implement Infrastructure as Code for their AWS resources across multiple accounts and regions. They need to ensure consistent deployments, prevent configuration drift, and enable easy rollbacks. What approach should they use?",
    "options": [
      {
        "text": "AWS CloudFormation with Cross-Stack References",
        "isCorrect": false
      },
      {
        "text": "AWS CloudFormation StackSets with AWS Organizations",
        "isCorrect": true
      },
      {
        "text": "Terraform with state file stored in S3",
        "isCorrect": false
      },
      {
        "text": "AWS CDK with manual deployment scripts",
        "isCorrect": false
      }
    ],
    "explanation": "CloudFormation StackSets allows deployment and management of CloudFormation stacks across multiple accounts and regions from a central location. Combined with AWS Organizations, it provides governance, consistent deployments, and centralized management with easy rollback capabilities.",
    "awsService": "CloudFormation"
  },
  {
    "id": "q108",
    "questionText": "A data analytics team needs to process 50TB of log data daily. The processing jobs are fault-tolerant and can handle interruptions. The data needs to be processed within 6 hours of arrival. What is the MOST cost-effective compute solution?",
    "options": [
      {
        "text": "AWS Lambda with SQS for job queuing",
        "isCorrect": false
      },
      {
        "text": "EC2 Spot Fleet with Auto Scaling",
        "isCorrect": true
      },
      {
        "text": "AWS Batch with On-Demand instances",
        "isCorrect": false
      },
      {
        "text": "Amazon EMR with Reserved Instances",
        "isCorrect": false
      }
    ],
    "explanation": "For large-scale, fault-tolerant batch processing, EC2 Spot Fleet provides the most cost-effective solution with up to 90% savings. The fault-tolerant nature of the workload makes it ideal for Spot instances, and Auto Scaling ensures capacity is available when needed.",
    "awsService": "EC2"
  },
  {
    "id": "q109",
    "questionText": "A company needs to migrate a legacy Oracle database to AWS. The database is 10TB in size, has complex stored procedures, and requires minimal downtime during migration. What migration strategy should be used?",
    "options": [
      {
        "text": "Use AWS Database Migration Service with homogeneous migration to RDS Oracle",
        "isCorrect": true
      },
      {
        "text": "Export/import using Oracle Data Pump to RDS Oracle",
        "isCorrect": false
      },
      {
        "text": "Use AWS Schema Conversion Tool to migrate to Aurora PostgreSQL",
        "isCorrect": false
      },
      {
        "text": "Set up Oracle GoldenGate replication to EC2-hosted Oracle",
        "isCorrect": false
      }
    ],
    "explanation": "For large Oracle databases with minimal downtime requirements, DMS provides continuous replication capabilities with Change Data Capture (CDC). Homogeneous migration to RDS Oracle preserves stored procedures and reduces conversion complexity while minimizing downtime.",
    "awsService": "DMS"
  },
  {
    "id": "q110",
    "questionText": "A SaaS application serves multiple tenants and stores tenant data in separate S3 buckets. Each tenant should only access their own data. What is the MOST scalable way to implement this security requirement?",
    "options": [
      {
        "text": "Create separate IAM users for each tenant with bucket-specific policies",
        "isCorrect": false
      },
      {
        "text": "Use IAM roles with policy variables and STS assume role with conditions",
        "isCorrect": true
      },
      {
        "text": "Implement application-level access control without IAM",
        "isCorrect": false
      },
      {
        "text": "Use S3 bucket policies with explicit deny for other tenants",
        "isCorrect": false
      }
    ],
    "explanation": "IAM roles with policy variables (like ${aws:username}) and STS assume role provide scalable multi-tenant security. The application assumes roles with conditions that dynamically restrict access to tenant-specific resources without creating separate policies for each tenant.",
    "awsService": "IAM"
  },
  {
    "id": "q111",
    "questionText": "A machine learning team trains models using GPU-intensive workloads that run for 2-8 hours unpredictably. The team wants to minimize costs while ensuring jobs complete successfully. What EC2 strategy should they use?",
    "options": [
      {
        "text": "Use Spot instances with checkpointing and multiple AZs",
        "isCorrect": true
      },
      {
        "text": "Use On-Demand instances with Auto Scaling",
        "isCorrect": false
      },
      {
        "text": "Use Reserved Instances for GPU instances",
        "isCorrect": false
      },
      {
        "text": "Use Dedicated Hosts for consistent performance",
        "isCorrect": false
      }
    ],
    "explanation": "For ML training workloads, Spot instances offer significant cost savings (up to 90%). Implementing checkpointing allows jobs to resume after interruptions, and using multiple AZs increases availability. The unpredictable 2-8 hour duration makes Reserved Instances less cost-effective.",
    "awsService": "EC2"
  },
  {
    "id": "q112",
    "questionText": "A company wants to implement a centralized logging solution for applications running across multiple AWS accounts. The logs must be searchable, have configurable retention periods, and support real-time alerting. What architecture should they use?",
    "options": [
      {
        "text": "CloudWatch Logs in each account with cross-account access",
        "isCorrect": false
      },
      {
        "text": "Kinesis Data Streams + Kinesis Data Firehose + OpenSearch + CloudWatch Alarms",
        "isCorrect": true
      },
      {
        "text": "S3 with lifecycle policies and Athena for querying",
        "isCorrect": false
      },
      {
        "text": "ELK stack on EC2 instances with cross-account VPC peering",
        "isCorrect": false
      }
    ],
    "explanation": "Kinesis Data Streams collects logs from multiple accounts, Kinesis Data Firehose provides reliable delivery to OpenSearch for indexing and searching, with configurable buffering and compression. CloudWatch Alarms enable real-time alerting based on log patterns and metrics.",
    "awsService": "Kinesis"
  },
  {
    "id": "q113",
    "questionText": "An organization wants to implement a DevOps pipeline that automatically deploys applications to multiple environments (dev, staging, prod) with appropriate approval gates. What AWS services combination provides the best solution?",
    "options": [
      {
        "text": "CodeCommit + CodeBuild + CodeDeploy + Lambda for approvals",
        "isCorrect": false
      },
      {
        "text": "CodePipeline + CodeBuild + CodeDeploy + Manual approval actions",
        "isCorrect": true
      },
      {
        "text": "Jenkins on EC2 + CodeDeploy + SNS notifications",
        "isCorrect": false
      },
      {
        "text": "GitHub Actions + CodeBuild + CloudFormation",
        "isCorrect": false
      }
    ],
    "explanation": "CodePipeline orchestrates the entire pipeline with stages for each environment, CodeBuild handles application building/testing, CodeDeploy manages deployments, and manual approval actions provide human gates between environments. This is the native AWS solution for CI/CD with approvals.",
    "awsService": "CodePipeline"
  },
  {
    "id": "q114",
    "questionText": "A real-time analytics application processes millions of events per second and needs to maintain exactly-once processing guarantees. The application must scale automatically and handle stream processing with low latency. What architecture should be used?",
    "options": [
      {
        "text": "Kinesis Data Streams + Lambda with DLQ",
        "isCorrect": false
      },
      {
        "text": "SQS FIFO + Lambda with reserved concurrency",
        "isCorrect": false
      },
      {
        "text": "Kinesis Data Streams + Kinesis Analytics + Kinesis Data Firehose",
        "isCorrect": true
      },
      {
        "text": "Amazon MQ + EC2 with Auto Scaling",
        "isCorrect": false
      }
    ],
    "explanation": "Kinesis Data Streams provides high-throughput event ingestion with ordered processing per shard. Kinesis Analytics enables real-time stream processing with exactly-once semantics using Apache Flink. Kinesis Data Firehose provides reliable delivery to various destinations with automatic scaling.",
    "awsService": "Kinesis"
  },
  {
    "id": "q115",
    "questionText": "A financial application requires encryption at rest and in transit for all data. The application also needs to implement key rotation every 90 days and maintain an audit trail of all key usage. What key management strategy should be implemented?",
    "options": [
      {
        "text": "AWS KMS with automatic key rotation and CloudTrail logging",
        "isCorrect": true
      },
      {
        "text": "Client-side encryption with manually managed keys in S3",
        "isCorrect": false
      },
      {
        "text": "AWS CloudHSM with custom key rotation scripts",
        "isCorrect": false
      },
      {
        "text": "Application-level encryption with database-stored keys",
        "isCorrect": false
      }
    ],
    "explanation": "AWS KMS provides FIPS 140-2 Level 2 validated HSMs, automatic key rotation capabilities, and integrates with CloudTrail for comprehensive audit logging. It supports both server-side encryption and client-side encryption, making it ideal for financial compliance requirements.",
    "awsService": "KMS"
  },
  {
    "id": "q116",
    "questionText": "A company wants to implement a microservices architecture with service discovery, load balancing, and health checks. The services need to scale independently and communicate securely. What AWS solution provides the best approach?",
    "options": [
      {
        "text": "ECS with Application Load Balancer and Route 53",
        "isCorrect": false
      },
      {
        "text": "EKS with AWS Load Balancer Controller and AWS App Mesh",
        "isCorrect": true
      },
      {
        "text": "Lambda functions with API Gateway",
        "isCorrect": false
      },
      {
        "text": "EC2 instances with Consul and HAProxy",
        "isCorrect": false
      }
    ],
    "explanation": "EKS provides a managed Kubernetes platform for microservices, AWS Load Balancer Controller enables advanced load balancing features, and AWS App Mesh provides service mesh capabilities including service discovery, traffic management, and observability for secure service-to-service communication.",
    "awsService": "EKS"
  },
  {
    "id": "q117",
    "questionText": "A data science team needs to perform complex analytics on datasets ranging from 100GB to 10TB. The queries are ad-hoc and unpredictable. They want a serverless solution that can scale automatically and only charge for actual usage. What service should they use?",
    "options": [
      {
        "text": "Amazon Redshift with Auto Scaling",
        "isCorrect": false
      },
      {
        "text": "Amazon Athena with data partitioning",
        "isCorrect": true
      },
      {
        "text": "Amazon EMR with Spot instances",
        "isCorrect": false
      },
      {
        "text": "Amazon RDS with read replicas",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Athena is serverless and perfect for ad-hoc analytics on large datasets stored in S3. It automatically scales and you only pay for queries run. Proper data partitioning in S3 significantly improves query performance and reduces costs for large datasets.",
    "awsService": "Athena"
  },
  {
    "id": "q118",
    "questionText": "An application needs to process video files uploaded to S3. Processing takes 10-30 minutes per file and should start immediately after upload. The processing is CPU-intensive and requires specific software libraries. What architecture provides the best solution?",
    "options": [
      {
        "text": "S3 Event Notification + Lambda + EC2 instances",
        "isCorrect": false
      },
      {
        "text": "S3 Event Notification + SQS + ECS with Fargate",
        "isCorrect": true
      },
      {
        "text": "S3 Event Notification + Step Functions + Lambda",
        "isCorrect": false
      },
      {
        "text": "CloudWatch Events + Lambda + Batch",
        "isCorrect": false
      }
    ],
    "explanation": "S3 Event Notifications trigger immediately on upload, SQS provides reliable queuing for processing requests, and ECS with Fargate allows containerized processing with custom software libraries. This architecture scales automatically and handles long-running CPU-intensive tasks efficiently.",
    "awsService": "ECS"
  },
  {
    "id": "q119",
    "questionText": "A company needs to implement a solution that monitors AWS resources for compliance violations and automatically remediate common issues. The solution should support custom rules and provide detailed reporting. What services should be used?",
    "options": [
      {
        "text": "AWS Config + AWS Config Rules + Systems Manager Automation",
        "isCorrect": true
      },
      {
        "text": "CloudWatch + CloudWatch Alarms + Lambda",
        "isCorrect": false
      },
      {
        "text": "AWS Security Hub + GuardDuty + Inspector",
        "isCorrect": false
      },
      {
        "text": "CloudTrail + CloudWatch Logs + SNS",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Config continuously monitors resource configurations, Config Rules evaluate compliance against desired configurations (including custom rules), and Systems Manager Automation can automatically remediate violations. This combination provides comprehensive compliance monitoring and automated remediation.",
    "awsService": "Config"
  },
  {
    "id": "q120",
    "questionText": "A gaming company wants to implement a global leaderboard system that can handle millions of concurrent users with sub-millisecond latency. The system needs to support real-time updates and maintain consistency. What database solution should they use?",
    "options": [
      {
        "text": "DynamoDB with Global Tables and DAX",
        "isCorrect": true
      },
      {
        "text": "Aurora Global Database with read replicas",
        "isCorrect": false
      },
      {
        "text": "ElastiCache for Redis with cluster mode",
        "isCorrect": false
      },
      {
        "text": "DocumentDB with cross-region replication",
        "isCorrect": false
      }
    ],
    "explanation": "DynamoDB with Global Tables provides multi-region, multi-master replication for global scale, while DAX (DynamoDB Accelerator) provides microsecond latency for reads. This combination handles millions of concurrent users with the required sub-millisecond performance for gaming applications.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q121",
    "questionText": "A company wants to optimize their AWS costs across multiple accounts. They need detailed cost analysis, budget alerts, and recommendations for cost optimization. What combination of AWS services should they implement?",
    "options": [
      {
        "text": "Cost Explorer + Budgets + Trusted Advisor",
        "isCorrect": false
      },
      {
        "text": "Cost Explorer + Budgets + Compute Optimizer + Trusted Advisor",
        "isCorrect": true
      },
      {
        "text": "CloudWatch + CloudTrail + Cost Allocation Tags",
        "isCorrect": false
      },
      {
        "text": "AWS Organizations + Service Control Policies + CloudFormation",
        "isCorrect": false
      }
    ],
    "explanation": "Cost Explorer provides detailed cost analysis and trends, Budgets enables proactive cost management with alerts, Compute Optimizer provides ML-powered recommendations for right-sizing, and Trusted Advisor offers additional cost optimization recommendations. This comprehensive combination covers all aspects of cost optimization.",
    "awsService": "Cost Management"
  },
  {
    "id": "q122",
    "questionText": "An IoT application receives sensor data from millions of devices every minute. The data needs to be processed in real-time for anomaly detection and stored for batch analytics. What architecture should be implemented?",
    "options": [
      {
        "text": "API Gateway + Lambda + DynamoDB + S3",
        "isCorrect": false
      },
      {
        "text": "IoT Core + Kinesis Data Streams + Lambda + S3 + Kinesis Analytics",
        "isCorrect": true
      },
      {
        "text": "IoT Core + SQS + EC2 + RDS + RedShift",
        "isCorrect": false
      },
      {
        "text": "Direct Connect + Kinesis Data Firehose + ElasticSearch",
        "isCorrect": false
      }
    ],
    "explanation": "IoT Core handles device connectivity and message routing, Kinesis Data Streams provides high-throughput ingestion, Lambda processes data for real-time anomaly detection, S3 stores data for batch analytics, and Kinesis Analytics enables real-time stream processing for immediate insights.",
    "awsService": "IoT Core"
  },
  {
    "id": "q123",
    "questionText": "A company needs to implement a data lake solution that can store structured and unstructured data, provide fine-grained access control, and enable both batch and interactive analytics. What AWS services combination should be used?",
    "options": [
      {
        "text": "S3 + Glue + Athena + QuickSight",
        "isCorrect": false
      },
      {
        "text": "S3 + Lake Formation + Glue + Athena + EMR",
        "isCorrect": true
      },
      {
        "text": "Redshift + Spectrum + S3 + Glue",
        "isCorrect": false
      },
      {
        "text": "DynamoDB + S3 + Lambda + Kinesis Analytics",
        "isCorrect": false
      }
    ],
    "explanation": "S3 provides scalable storage for the data lake, Lake Formation simplifies setup and provides fine-grained access control with column-level security, Glue handles ETL and data catalog, Athena enables interactive SQL queries, and EMR provides big data processing capabilities for batch analytics.",
    "awsService": "Lake Formation"
  },
  {
    "id": "q124",
    "questionText": "A startup wants to implement a cost-effective backup strategy for their production environment that includes EC2 instances, EBS volumes, and RDS databases. They need point-in-time recovery and want to automate the backup process. What solution should they use?",
    "options": [
      {
        "text": "AWS Backup with backup plans and lifecycle policies",
        "isCorrect": true
      },
      {
        "text": "Lambda functions with boto3 to create manual snapshots",
        "isCorrect": false
      },
      {
        "text": "EBS snapshots + RDS automated backups + AMI creation scripts",
        "isCorrect": false
      },
      {
        "text": "AWS DataSync + S3 with versioning enabled",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Backup provides a centralized backup solution across multiple AWS services, with automated backup plans, lifecycle policies for cost optimization, point-in-time recovery, and compliance reporting. It's the most comprehensive and cost-effective solution for multi-service backup requirements.",
    "awsService": "AWS Backup"
  },
  {
    "id": "q125",
    "questionText": "A financial trading application requires ultra-low latency networking between compute instances for high-frequency trading algorithms. What EC2 features should be configured to minimize network latency?",
    "options": [
      {
        "text": "Placement groups + Enhanced networking + Instance types with high network performance",
        "isCorrect": true
      },
      {
        "text": "Multiple AZs + Load balancing + Auto Scaling groups",
        "isCorrect": false
      },
      {
        "text": "Reserved instances + Dedicated hosts + EBS optimization",
        "isCorrect": false
      },
      {
        "text": "Spot instances + Mixed instance types + Elastic IP addresses",
        "isCorrect": false
      }
    ],
    "explanation": "Cluster placement groups provide 10 Gbps network performance between instances, Enhanced Networking (SR-IOV) reduces network latency and jitter, and selecting instance types specifically designed for high network performance (like C5n, M5n, R5n) minimizes latency for HFT applications.",
    "awsService": "EC2"
  },
  {
    "id": "q126",
    "questionText": "A company wants to implement a serverless web application with user authentication, file uploads, and real-time notifications. The application should scale automatically and minimize operational overhead. What architecture should be used?",
    "options": [
      {
        "text": "Cognito + API Gateway + Lambda + S3 + SNS",
        "isCorrect": false
      },
      {
        "text": "Cognito + API Gateway + Lambda + S3 + WebSocket API + DynamoDB",
        "isCorrect": true
      },
      {
        "text": "ALB + ECS + RDS + ElastiCache + SQS",
        "isCorrect": false
      },
      {
        "text": "CloudFront + S3 + EC2 + RDS + Redis",
        "isCorrect": false
      }
    ],
    "explanation": "Cognito handles user authentication, API Gateway provides REST endpoints, Lambda processes business logic, S3 stores files, WebSocket API enables real-time notifications, and DynamoDB provides scalable NoSQL storage. This fully serverless architecture scales automatically with minimal operational overhead.",
    "awsService": "API Gateway"
  },
  {
    "id": "q127",
    "questionText": "A machine learning company needs to train large models that require hundreds of GPUs working together. The training jobs can take several days to complete and need fault tolerance. What AWS service is BEST suited for this workload?",
    "options": [
      {
        "text": "EC2 P4 instances with EFA networking",
        "isCorrect": false
      },
      {
        "text": "SageMaker Training with distributed training",
        "isCorrect": true
      },
      {
        "text": "AWS Batch with GPU-enabled instances",
        "isCorrect": false
      },
      {
        "text": "EKS with GPU-enabled node groups",
        "isCorrect": false
      }
    ],
    "explanation": "SageMaker Training is specifically designed for machine learning workloads, supports distributed training across multiple GPU instances, provides built-in fault tolerance with checkpointing, and offers optimized ML frameworks. It's the most suitable service for large-scale ML training requirements.",
    "awsService": "SageMaker"
  },
  {
    "id": "q128",
    "questionText": "A company wants to implement a hybrid cloud storage solution where frequently accessed data is stored on-premises and infrequently accessed data is automatically moved to AWS. What AWS service should they use?",
    "options": [
      {
        "text": "AWS Storage Gateway - Volume Gateway",
        "isCorrect": false
      },
      {
        "text": "AWS Storage Gateway - File Gateway",
        "isCorrect": true
      },
      {
        "text": "AWS DataSync with scheduled transfers",
        "isCorrect": false
      },
      {
        "text": "Direct Connect with S3 Transfer Acceleration",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Storage Gateway File Gateway provides a seamless bridge between on-premises environments and S3. It caches frequently accessed data locally while automatically storing all data in S3, enabling hybrid cloud storage with intelligent tiering based on access patterns.",
    "awsService": "Storage Gateway"
  },
  {
    "id": "q129",
    "questionText": "A global e-commerce application experiences seasonal traffic spikes and wants to implement automatic scaling across multiple regions. The application uses containers and needs zero-downtime deployments. What solution provides the best approach?",
    "options": [
      {
        "text": "ECS with Auto Scaling and Application Load Balancer",
        "isCorrect": false
      },
      {
        "text": "EKS with Cluster Autoscaler, HPA, and Blue/Green deployments",
        "isCorrect": true
      },
      {
        "text": "Lambda functions with reserved concurrency",
        "isCorrect": false
      },
      {
        "text": "EC2 Auto Scaling groups with multiple AZs",
        "isCorrect": false
      }
    ],
    "explanation": "EKS provides managed Kubernetes with global reach, Cluster Autoscaler handles node scaling, Horizontal Pod Autoscaler (HPA) scales application pods based on metrics, and Blue/Green deployments enable zero-downtime updates. This combination provides enterprise-grade container orchestration with automatic scaling.",
    "awsService": "EKS"
  },
  {
    "id": "q130",
    "questionText": "A healthcare organization needs to process and analyze medical images (DICOM files) with machine learning for diagnostic assistance. The solution must be HIPAA compliant and provide audit trails. What AWS architecture should be implemented?",
    "options": [
      {
        "text": "S3 + SageMaker + CloudTrail + KMS",
        "isCorrect": true
      },
      {
        "text": "EFS + EC2 + Lambda + CloudWatch",
        "isCorrect": false
      },
      {
        "text": "Glacier + Batch + GuardDuty + Config",
        "isCorrect": false
      },
      {
        "text": "WorkDocs + Comprehend Medical + WAF",
        "isCorrect": false
      }
    ],
    "explanation": "S3 provides HIPAA-eligible storage for DICOM files with server-side encryption, SageMaker offers HIPAA-eligible ML services for image analysis, CloudTrail provides audit trails for compliance, and KMS manages encryption keys. This combination meets healthcare compliance requirements while enabling ML capabilities.",
    "awsService": "SageMaker"
  },
  {
    "id": "q131",
    "questionText": "A company wants to implement a CDN solution that can handle both static and dynamic content, provide real-time analytics, and integrate with their existing AWS infrastructure. What solution should they choose?",
    "options": [
      {
        "text": "CloudFront with Lambda@Edge and Real-time Logs",
        "isCorrect": true
      },
      {
        "text": "Application Load Balancer with Global Accelerator",
        "isCorrect": false
      },
      {
        "text": "Route 53 with health checks and failover routing",
        "isCorrect": false
      },
      {
        "text": "API Gateway with caching enabled and CloudWatch",
        "isCorrect": false
      }
    ],
    "explanation": "CloudFront provides global CDN capabilities for both static and dynamic content, Lambda@Edge enables dynamic content processing at edge locations, and Real-time Logs provide immediate access to detailed analytics data. This solution offers the most comprehensive CDN features with AWS integration.",
    "awsService": "CloudFront"
  },
  {
    "id": "q132",
    "questionText": "A DevOps team wants to implement infrastructure testing and validation before deploying changes to production. They need to test both infrastructure configuration and application behavior. What approach should they use?",
    "options": [
      {
        "text": "CloudFormation with drift detection and AWS Config rules",
        "isCorrect": false
      },
      {
        "text": "AWS CodePipeline with AWS CodeBuild for testing and AWS CodeDeploy with blue/green deployment",
        "isCorrect": true
      },
      {
        "text": "Terraform with terraform validate and manual testing",
        "isCorrect": false
      },
      {
        "text": "AWS Systems Manager with patch management and compliance scanning",
        "isCorrect": false
      }
    ],
    "explanation": "CodePipeline orchestrates the testing workflow, CodeBuild runs infrastructure validation tests and application tests in isolated environments, and CodeDeploy with blue/green deployment allows safe production deployment with easy rollback capabilities. This provides comprehensive testing and validation.",
    "awsService": "CodePipeline"
  },
  {
    "id": "q133",
    "questionText": "A financial services company needs to implement data masking and tokenization for sensitive customer data across their applications. The solution must support different masking techniques and maintain referential integrity. What AWS service should they use?",
    "options": [
      {
        "text": "AWS Secrets Manager with automatic rotation",
        "isCorrect": false
      },
      {
        "text": "AWS Glue with custom ETL scripts for data transformation",
        "isCorrect": true
      },
      {
        "text": "AWS KMS with envelope encryption",
        "isCorrect": false
      },
      {
        "text": "Amazon Macie for data discovery and classification",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Glue provides powerful ETL capabilities with custom Python/Scala scripts that can implement various data masking and tokenization techniques while maintaining referential integrity. It can process data at scale and integrate with multiple data sources and targets.",
    "awsService": "Glue"
  },
  {
    "id": "q134",
    "questionText": "A company operates a multi-tenant SaaS application where each tenant's data must be isolated and encrypted with separate keys. They want to implement a centralized key management strategy that provides audit trails and key rotation. What solution should they implement?",
    "options": [
      {
        "text": "AWS KMS with customer-managed keys per tenant and CloudTrail logging",
        "isCorrect": true
      },
      {
        "text": "Application-level encryption with keys stored in Parameter Store",
        "isCorrect": false
      },
      {
        "text": "Database-level encryption with separate schemas per tenant",
        "isCorrect": false
      },
      {
        "text": "S3 bucket encryption with default AWS managed keys",
        "isCorrect": false
      }
    ],
    "explanation": "AWS KMS with customer-managed keys provides tenant-specific encryption keys with centralized management, automatic key rotation capabilities, and comprehensive audit trails through CloudTrail. This approach ensures data isolation while maintaining operational efficiency and compliance.",
    "awsService": "KMS"
  },
  {
    "id": "q135",
    "questionText": "A gaming company wants to implement a real-time matchmaking system that can handle millions of concurrent players worldwide. The system needs low latency, automatic scaling, and session state persistence. What architecture should they use?",
    "options": [
      {
        "text": "API Gateway + Lambda + DynamoDB + ElastiCache",
        "isCorrect": false
      },
      {
        "text": "GameLift + DynamoDB + ElastiCache for Redis with Global Datastore",
        "isCorrect": true
      },
      {
        "text": "EC2 with Auto Scaling + Application Load Balancer + RDS",
        "isCorrect": false
      },
      {
        "text": "Fargate + Application Load Balancer + Aurora Global Database",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon GameLift provides dedicated game server hosting with automatic scaling and fleet management, DynamoDB handles player data with global scale, and ElastiCache for Redis with Global Datastore provides ultra-low latency session state persistence across regions for optimal gaming experience.",
    "awsService": "GameLift"
  },
  {
    "id": "q136",
    "questionText": "A company wants to implement a document processing pipeline that can extract text from various file formats (PDF, images, handwritten documents), analyze sentiment, and store structured data. What AWS services should be combined?",
    "options": [
      {
        "text": "Textract + Comprehend + Lambda + DynamoDB",
        "isCorrect": true
      },
      {
        "text": "Rekognition + Transcribe + Step Functions + S3",
        "isCorrect": false
      },
      {
        "text": "SageMaker + Polly + API Gateway + RDS",
        "isCorrect": false
      },
      {
        "text": "Translate + Lex + Kinesis + Redshift",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Textract extracts text and data from documents including handwritten text, Amazon Comprehend analyzes sentiment and extracts insights from text, Lambda orchestrates the processing pipeline, and DynamoDB stores the structured results. This combination provides end-to-end document processing capabilities.",
    "awsService": "Textract"
  },
  {
    "id": "q137",
    "questionText": "A media company needs to implement a video streaming platform that can handle live broadcasts, on-demand content, and adaptive bitrate streaming for global audiences. What AWS architecture should they implement?",
    "options": [
      {
        "text": "MediaLive + MediaStore + CloudFront + Elemental MediaConvert",
        "isCorrect": true
      },
      {
        "text": "EC2 with FFmpeg + S3 + CloudFront + Lambda",
        "isCorrect": false
      },
      {
        "text": "Kinesis Video Streams + S3 + API Gateway + Lambda",
        "isCorrect": false
      },
      {
        "text": "ECS with streaming containers + ALB + Route 53",
        "isCorrect": false
      }
    ],
    "explanation": "AWS MediaLive provides live video processing and streaming, MediaStore offers optimized storage for media content, CloudFront delivers global content distribution with low latency, and Elemental MediaConvert handles video processing and adaptive bitrate encoding for various devices and network conditions.",
    "awsService": "MediaLive"
  },
  {
    "id": "q138",
    "questionText": "A company wants to implement predictive maintenance for their IoT devices using machine learning. They need to collect sensor data, train models, and deploy them for real-time inference. What end-to-end solution should they use?",
    "options": [
      {
        "text": "IoT Core + Kinesis + SageMaker + Lambda + IoT Greengrass",
        "isCorrect": true
      },
      {
        "text": "API Gateway + Lambda + DynamoDB + EC2 + CloudWatch",
        "isCorrect": false
      },
      {
        "text": "Kinesis + EMR + S3 + Batch + ECS",
        "isCorrect": false
      },
      {
        "text": "Direct Connect + Glue + Athena + QuickSight",
        "isCorrect": false
      }
    ],
    "explanation": "IoT Core collects sensor data from devices, Kinesis streams data for processing, SageMaker handles model training and deployment, Lambda processes inference requests, and IoT Greengrass enables edge computing for real-time inference on IoT devices, creating a complete predictive maintenance solution.",
    "awsService": "IoT Core"
  },
  {
    "id": "q139",
    "questionText": "A startup wants to implement a cost-effective solution for their development, testing, and staging environments that can be easily provisioned and destroyed. They want infrastructure as code and environment consistency. What approach should they use?",
    "options": [
      {
        "text": "AWS CDK with multiple stacks and environment-specific parameters",
        "isCorrect": true
      },
      {
        "text": "Manual EC2 instance creation with saved AMIs",
        "isCorrect": false
      },
      {
        "text": "Docker containers on single EC2 instance",
        "isCorrect": false
      },
      {
        "text": "AWS Quick Starts with default configurations",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CDK (Cloud Development Kit) enables infrastructure as code using familiar programming languages, supports multiple stacks for different environments, allows environment-specific parameters, and provides easy provisioning/destruction of resources. This approach ensures consistency and cost-effectiveness for development workflows.",
    "awsService": "CDK"
  },
  {
    "id": "q140",
    "questionText": "A company needs to implement a solution for processing millions of small files (1-10KB each) stored in S3. The processing is CPU-intensive and needs to scale based on the number of files in the queue. What architecture provides the best performance and cost optimization?",
    "options": [
      {
        "text": "S3 Event Notifications + Lambda with high memory configuration",
        "isCorrect": false
      },
      {
        "text": "S3 Event Notifications + SQS + EC2 Auto Scaling with Spot instances",
        "isCorrect": true
      },
      {
        "text": "S3 Event Notifications + Step Functions + Fargate",
        "isCorrect": false
      },
      {
        "text": "S3 Transfer Acceleration + API Gateway + Lambda",
        "isCorrect": false
      }
    ],
    "explanation": "For millions of small files requiring CPU-intensive processing, S3 Event Notifications trigger processing requests, SQS provides reliable queuing with visibility timeouts, and EC2 Auto Scaling with Spot instances provides cost-effective compute power that scales based on queue depth. This architecture handles high volume efficiently.",
    "awsService": "SQS"
  },
  {
    "id": "q141",
    "questionText": "A financial institution needs to implement automated security scanning and vulnerability management across their AWS infrastructure. The solution should provide continuous monitoring, threat detection, and compliance reporting. What services should be combined?",
    "options": [
      {
        "text": "Security Hub + GuardDuty + Inspector + Config + Systems Manager Patch Manager",
        "isCorrect": true
      },
      {
        "text": "CloudTrail + CloudWatch + WAF + Shield",
        "isCorrect": false
      },
      {
        "text": "Macie + Secrets Manager + Certificate Manager + KMS",
        "isCorrect": false
      },
      {
        "text": "Organizations + Control Tower + Service Control Policies",
        "isCorrect": false
      }
    ],
    "explanation": "Security Hub provides centralized security findings management, GuardDuty offers intelligent threat detection, Inspector performs vulnerability assessments, Config monitors compliance, and Systems Manager Patch Manager automates patch management. This comprehensive combination covers all aspects of security scanning and vulnerability management.",
    "awsService": "Security Hub"
  },
  {
    "id": "q142",
    "questionText": "A company wants to implement a real-time recommendation engine for their e-commerce platform. The system needs to process user behavior events, update recommendations instantly, and serve millions of requests per second. What architecture should they use?",
    "options": [
      {
        "text": "Kinesis Data Streams + Lambda + DynamoDB + API Gateway + CloudFront",
        "isCorrect": false
      },
      {
        "text": "Kinesis Data Streams + Kinesis Analytics + DynamoDB + ElastiCache + Application Load Balancer",
        "isCorrect": true
      },
      {
        "text": "SQS + EC2 + RDS + ElasticSearch + Route 53",
        "isCorrect": false
      },
      {
        "text": "API Gateway + Lambda + S3 + Athena + QuickSight",
        "isCorrect": false
      }
    ],
    "explanation": "Kinesis Data Streams ingests real-time user behavior events, Kinesis Analytics processes streams to generate recommendations, DynamoDB stores user profiles and product data, ElastiCache provides microsecond latency for serving recommendations, and Application Load Balancer distributes traffic across multiple endpoints for high throughput.",
    "awsService": "Kinesis"
  },
  {
    "id": "q143",
    "questionText": "A company operates a global application with users in North America, Europe, and Asia. They want to implement a database solution that provides low-latency reads in all regions while maintaining strong consistency for writes. What database architecture should they use?",
    "options": [
      {
        "text": "RDS with cross-region read replicas",
        "isCorrect": false
      },
      {
        "text": "Aurora Global Database with read replicas in each region",
        "isCorrect": true
      },
      {
        "text": "DynamoDB Global Tables with eventual consistency",
        "isCorrect": false
      },
      {
        "text": "DocumentDB with manual cross-region replication",
        "isCorrect": false
      }
    ],
    "explanation": "Aurora Global Database provides a single database that spans multiple regions with typically less than 1 second replication lag between regions. It offers low-latency local reads in each region while maintaining strong consistency for writes to the primary region, making it ideal for global applications requiring both performance and consistency.",
    "awsService": "Aurora"
  },
  {
    "id": "q144",
    "questionText": "A healthcare organization wants to implement a HIPAA-compliant data analytics platform for processing patient data. The solution needs to support both real-time and batch analytics while maintaining strict access controls. What architecture should they implement?",
    "options": [
      {
        "text": "Kinesis + Lambda + S3 + Athena with encryption and IAM",
        "isCorrect": false
      },
      {
        "text": "Kinesis + S3 + Lake Formation + Glue + EMR with encryption at rest and in transit",
        "isCorrect": true
      },
      {
        "text": "API Gateway + DynamoDB + QuickSight with VPC endpoints",
        "isCorrect": false
      },
      {
        "text": "SQS + EC2 + RDS + Redshift with dedicated tenancy",
        "isCorrect": false
      }
    ],
    "explanation": "This architecture uses HIPAA-eligible services: Kinesis for real-time data ingestion, S3 for encrypted storage, Lake Formation for fine-grained access control and data governance, Glue for ETL processing, and EMR for big data analytics. All services support encryption at rest and in transit, meeting HIPAA compliance requirements.",
    "awsService": "Lake Formation"
  },
  {
    "id": "q145",
    "questionText": "A company wants to implement a multi-account strategy for their organization with centralized governance, billing management, and security policies. They need to automate account creation and apply policies consistently. What AWS solution should they use?",
    "options": [
      {
        "text": "AWS Organizations + Control Tower + Service Control Policies + Account Factory",
        "isCorrect": true
      },
      {
        "text": "IAM + CloudFormation + Config + CloudTrail",
        "isCorrect": false
      },
      {
        "text": "Resource Groups + Systems Manager + AWS Config",
        "isCorrect": false
      },
      {
        "text": "Service Catalog + CloudFormation StackSets + IAM",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Organizations provides multi-account management, Control Tower offers account governance and compliance, Service Control Policies enforce organization-wide policies, and Account Factory automates account provisioning with pre-configured security guardrails. This combination provides comprehensive multi-account governance.",
    "awsService": "Control Tower"
  },
  {
    "id": "q146",
    "questionText": "A company needs to migrate their on-premises Hadoop cluster to AWS while maintaining compatibility with existing Spark and Hive jobs. They want a managed solution that can scale dynamically and integrate with other AWS services. What migration strategy should they use?",
    "options": [
      {
        "text": "Migrate to EC2 instances with manual Hadoop installation",
        "isCorrect": false
      },
      {
        "text": "Use Amazon EMR with existing job configurations and S3 for data storage",
        "isCorrect": true
      },
      {
        "text": "Migrate to EKS with containerized Hadoop components",
        "isCorrect": false
      },
      {
        "text": "Use AWS Glue to replace all Hadoop workloads",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon EMR is a managed Hadoop service that supports existing Spark and Hive jobs with minimal changes. It integrates seamlessly with S3 for data storage, provides automatic scaling, and offers cost optimization features like Spot instances while maintaining compatibility with existing big data workflows.",
    "awsService": "EMR"
  },
  {
    "id": "q147",
    "questionText": "A social media company wants to implement content moderation using machine learning to detect inappropriate images and text in real-time. The solution should handle millions of posts per day and provide confidence scores. What AWS services should be combined?",
    "options": [
      {
        "text": "Rekognition + Comprehend + Step Functions + DynamoDB",
        "isCorrect": true
      },
      {
        "text": "SageMaker + Lambda + S3 + ElasticSearch",
        "isCorrect": false
      },
      {
        "text": "Textract + Translate + API Gateway + RDS",
        "isCorrect": false
      },
      {
        "text": "Lex + Polly + Kinesis + Redshift",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Rekognition provides image moderation with confidence scores for inappropriate content detection, Amazon Comprehend analyzes text for sentiment and inappropriate content, Step Functions orchestrates the moderation workflow, and DynamoDB stores moderation results and metadata for high-volume processing.",
    "awsService": "Rekognition"
  },
  {
    "id": "q148",
    "questionText": "A company wants to implement a serverless data processing pipeline that can handle both scheduled batch jobs and event-driven processing. The pipeline needs to support complex workflows with error handling and retry logic. What solution should they use?",
    "options": [
      {
        "text": "Lambda + CloudWatch Events + SQS + DLQ",
        "isCorrect": false
      },
      {
        "text": "Step Functions + Lambda + EventBridge + S3",
        "isCorrect": true
      },
      {
        "text": "Glue + Batch + CloudFormation + SNS",
        "isCorrect": false
      },
      {
        "text": "Kinesis + Lambda + DynamoDB + CloudWatch",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Step Functions provides serverless workflow orchestration with built-in error handling and retry logic, Lambda executes individual processing steps, EventBridge handles both scheduled and event-driven triggers, and S3 stores processed data. This combination offers comprehensive serverless data processing capabilities.",
    "awsService": "Step Functions"
  },
  {
    "id": "q149",
    "questionText": "A company operates a microservices architecture and wants to implement distributed tracing to monitor application performance and troubleshoot issues across service boundaries. What AWS solution should they implement?",
    "options": [
      {
        "text": "CloudWatch + CloudTrail + Config",
        "isCorrect": false
      },
      {
        "text": "X-Ray + CloudWatch + Application Insights",
        "isCorrect": true
      },
      {
        "text": "GuardDuty + Security Hub + Inspector",
        "isCorrect": false
      },
      {
        "text": "Systems Manager + OpsWorks + CloudFormation",
        "isCorrect": false
      }
    ],
    "explanation": "AWS X-Ray provides distributed tracing capabilities to track requests across microservices, CloudWatch collects metrics and logs, and Application Insights automatically discovers application topology and provides intelligent analytics. This combination enables comprehensive monitoring and troubleshooting of distributed applications.",
    "awsService": "X-Ray"
  },
  {
    "id": "q150",
    "questionText": "A company wants to implement a solution for automated infrastructure remediation that can detect configuration drift, security violations, and performance issues, then automatically fix common problems. What combination of services provides the best approach?",
    "options": [
      {
        "text": "Config + CloudWatch + Lambda + Systems Manager Automation",
        "isCorrect": true
      },
      {
        "text": "CloudTrail + SNS + Lambda + EC2",
        "isCorrect": false
      },
      {
        "text": "Security Hub + GuardDuty + WAF + Shield",
        "isCorrect": false
      },
      {
        "text": "Trusted Advisor + Support API + CloudFormation",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Config monitors resource configurations and detects drift, CloudWatch monitors performance metrics and security events, Lambda processes alerts and triggers remediation, and Systems Manager Automation executes pre-defined remediation runbooks. This combination provides comprehensive automated infrastructure remediation capabilities.",
    "awsService": "Systems Manager"
  },
  {
    "id": "q151",
    "questionText": "A company needs to store large amounts of archival data that is rarely accessed. The data must be retained for 7 years for compliance purposes. Which S3 storage class would be most cost-effective?",
    "options": [
      {
        "text": "S3 Standard",
        "isCorrect": false
      },
      {
        "text": "S3 Standard-IA",
        "isCorrect": false
      },
      {
        "text": "S3 Glacier Deep Archive",
        "isCorrect": true
      },
      {
        "text": "S3 One Zone-IA",
        "isCorrect": false
      }
    ],
    "explanation": "S3 Glacier Deep Archive is designed for long-term archival storage with the lowest cost and retrieval times of 12 hours or more, making it perfect for compliance data that's rarely accessed.",
    "awsService": "S3"
  },
  {
    "id": "q152",
    "questionText": "An application requires a database that can handle millions of requests per second with single-digit millisecond latency. Which AWS service would be most appropriate?",
    "options": [
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": true
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      },
      {
        "text": "Amazon Aurora",
        "isCorrect": false
      }
    ],
    "explanation": "DynamoDB is a NoSQL database service that provides fast and predictable performance with seamless scalability, capable of handling millions of requests per second with single-digit millisecond latency.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q153",
    "questionText": "A web application needs to process user uploads in the background. The processing can take anywhere from 1 minute to 15 minutes. Which compute service would be most cost-effective?",
    "options": [
      {
        "text": "Amazon EC2 On-Demand instances",
        "isCorrect": false
      },
      {
        "text": "AWS Lambda",
        "isCorrect": false
      },
      {
        "text": "Amazon ECS with Fargate",
        "isCorrect": true
      },
      {
        "text": "Amazon EC2 Spot instances",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Lambda has a maximum execution time of 15 minutes, making it unsuitable for longer processing. ECS with Fargate is ideal for variable-length background processing as you pay only for the compute time used.",
    "awsService": "ECS"
  },
  {
    "id": "q154",
    "questionText": "A company wants to implement blue-green deployments for their web application. Which AWS service combination would best support this pattern?",
    "options": [
      {
        "text": "Route 53 and Application Load Balancer",
        "isCorrect": true
      },
      {
        "text": "CloudFront and S3",
        "isCorrect": false
      },
      {
        "text": "EC2 Auto Scaling and Network Load Balancer",
        "isCorrect": false
      },
      {
        "text": "Lambda and API Gateway",
        "isCorrect": false
      }
    ],
    "explanation": "Route 53 weighted routing policies combined with Application Load Balancer allow you to gradually shift traffic between blue and green environments, enabling safe blue-green deployments.",
    "awsService": "Route 53"
  },
  {
    "id": "q155",
    "questionText": "An organization needs to ensure all AWS API calls are logged for security auditing. Which service should they enable?",
    "options": [
      {
        "text": "AWS CloudWatch",
        "isCorrect": false
      },
      {
        "text": "AWS CloudTrail",
        "isCorrect": true
      },
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "AWS X-Ray",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CloudTrail is a service that enables governance, compliance, operational auditing, and risk auditing by logging all AWS API calls made in your account.",
    "awsService": "CloudTrail"
  },
  {
    "id": "q156",
    "questionText": "A startup needs a managed database service that can automatically scale read capacity based on demand without downtime. Which service should they choose?",
    "options": [
      {
        "text": "Amazon RDS MySQL",
        "isCorrect": false
      },
      {
        "text": "Amazon Aurora Serverless",
        "isCorrect": true
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      },
      {
        "text": "Amazon ElastiCache",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Aurora Serverless automatically starts, scales compute capacity up or down based on application needs, and shuts down when not in use, providing automatic scaling without downtime.",
    "awsService": "Aurora"
  },
  {
    "id": "q157",
    "questionText": "A company wants to run containers without managing the underlying infrastructure. Which AWS service provides the most serverless container experience?",
    "options": [
      {
        "text": "Amazon ECS with EC2",
        "isCorrect": false
      },
      {
        "text": "Amazon EKS",
        "isCorrect": false
      },
      {
        "text": "AWS Fargate",
        "isCorrect": true
      },
      {
        "text": "AWS Batch",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Fargate is a serverless compute engine for containers that allows you to run containers without having to manage servers or clusters of Amazon EC2 instances.",
    "awsService": "Fargate"
  },
  {
    "id": "q158",
    "questionText": "An e-commerce application experiences high traffic during sales events. The application uses a relational database. How can you improve read performance during these events?",
    "options": [
      {
        "text": "Increase the instance size",
        "isCorrect": false
      },
      {
        "text": "Add read replicas",
        "isCorrect": true
      },
      {
        "text": "Enable Multi-AZ deployment",
        "isCorrect": false
      },
      {
        "text": "Use Amazon Redshift",
        "isCorrect": false
      }
    ],
    "explanation": "Read replicas allow you to scale read capacity by creating read-only copies of your database that can handle read queries, reducing load on the primary database during high-traffic events.",
    "awsService": "RDS"
  },
  {
    "id": "q159",
    "questionText": "A media company needs to distribute video content globally with low latency. Which AWS service should they use?",
    "options": [
      {
        "text": "Amazon S3",
        "isCorrect": false
      },
      {
        "text": "Amazon CloudFront",
        "isCorrect": true
      },
      {
        "text": "AWS Global Accelerator",
        "isCorrect": false
      },
      {
        "text": "Amazon ElastiCache",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon CloudFront is a content delivery network (CDN) service that delivers content to users globally with low latency by caching content at edge locations worldwide.",
    "awsService": "CloudFront"
  },
  {
    "id": "q160",
    "questionText": "A financial services company needs to encrypt sensitive data in their S3 bucket using their own encryption keys. Which encryption option should they use?",
    "options": [
      {
        "text": "SSE-S3",
        "isCorrect": false
      },
      {
        "text": "SSE-KMS",
        "isCorrect": false
      },
      {
        "text": "SSE-C",
        "isCorrect": true
      },
      {
        "text": "Client-side encryption",
        "isCorrect": false
      }
    ],
    "explanation": "SSE-C (Server-Side Encryption with Customer-Provided Keys) allows you to provide your own encryption keys while Amazon S3 handles the encryption/decryption process.",
    "awsService": "S3"
  },
  {
    "id": "q161",
    "questionText": "A development team needs to test their application against a copy of production data. What is the most cost-effective way to create a test database?",
    "options": [
      {
        "text": "Create a new RDS instance and import data",
        "isCorrect": false
      },
      {
        "text": "Create a snapshot and restore to a smaller instance",
        "isCorrect": true
      },
      {
        "text": "Use RDS read replica",
        "isCorrect": false
      },
      {
        "text": "Export data to S3 and create new database",
        "isCorrect": false
      }
    ],
    "explanation": "Creating a snapshot of the production database and restoring it to a smaller, less expensive instance type provides an exact copy of production data while minimizing costs for testing.",
    "awsService": "RDS"
  },
  {
    "id": "q162",
    "questionText": "An application needs to process messages asynchronously with the ability to handle message failures and retry logic. Which service should be used?",
    "options": [
      {
        "text": "Amazon SNS",
        "isCorrect": false
      },
      {
        "text": "Amazon SQS",
        "isCorrect": true
      },
      {
        "text": "Amazon Kinesis",
        "isCorrect": false
      },
      {
        "text": "AWS Step Functions",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon SQS (Simple Queue Service) provides reliable message queuing with built-in retry logic, dead letter queues for handling failures, and asynchronous message processing capabilities.",
    "awsService": "SQS"
  },
  {
    "id": "q163",
    "questionText": "A company wants to monitor application performance and identify bottlenecks in their microservices architecture. Which service provides distributed tracing?",
    "options": [
      {
        "text": "Amazon CloudWatch",
        "isCorrect": false
      },
      {
        "text": "AWS CloudTrail",
        "isCorrect": false
      },
      {
        "text": "AWS X-Ray",
        "isCorrect": true
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      }
    ],
    "explanation": "AWS X-Ray helps developers analyze and debug distributed applications by providing distributed tracing capabilities to identify performance bottlenecks and errors across microservices.",
    "awsService": "X-Ray"
  },
  {
    "id": "q164",
    "questionText": "A company needs to ensure their EC2 instances are patched and compliant with security standards. Which service can automate this process?",
    "options": [
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "AWS Systems Manager",
        "isCorrect": true
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      },
      {
        "text": "AWS Security Hub",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Systems Manager provides patch management capabilities that can automatically patch EC2 instances and maintain compliance with security standards through its Patch Manager feature.",
    "awsService": "Systems Manager"
  },
  {
    "id": "q165",
    "questionText": "An IoT application generates millions of events per second that need to be processed in real-time. Which service is best suited for this use case?",
    "options": [
      {
        "text": "Amazon SQS",
        "isCorrect": false
      },
      {
        "text": "Amazon SNS",
        "isCorrect": false
      },
      {
        "text": "Amazon Kinesis Data Streams",
        "isCorrect": true
      },
      {
        "text": "AWS Lambda",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Kinesis Data Streams is designed for real-time data streaming and can handle millions of events per second, making it ideal for high-volume IoT data ingestion and processing.",
    "awsService": "Kinesis"
  },
  {
    "id": "q166",
    "questionText": "A web application running on EC2 needs to access S3 buckets securely without storing credentials in the application code. What is the best approach?",
    "options": [
      {
        "text": "Store credentials in environment variables",
        "isCorrect": false
      },
      {
        "text": "Use IAM roles for EC2",
        "isCorrect": true
      },
      {
        "text": "Use AWS Secrets Manager",
        "isCorrect": false
      },
      {
        "text": "Hard-code credentials in the application",
        "isCorrect": false
      }
    ],
    "explanation": "IAM roles for EC2 provide temporary credentials that are automatically rotated, eliminating the need to store long-term credentials in your application or EC2 instance.",
    "awsService": "IAM"
  },
  {
    "id": "q167",
    "questionText": "A company wants to implement disaster recovery with an RTO of 1 hour and RPO of 1 hour. Which DR strategy would be most appropriate?",
    "options": [
      {
        "text": "Backup and Restore",
        "isCorrect": false
      },
      {
        "text": "Pilot Light",
        "isCorrect": false
      },
      {
        "text": "Warm Standby",
        "isCorrect": true
      },
      {
        "text": "Multi-Site Active/Active",
        "isCorrect": false
      }
    ],
    "explanation": "Warm Standby maintains a scaled-down version of your production environment that can be quickly scaled up during a disaster, meeting the 1-hour RTO/RPO requirements cost-effectively.",
    "awsService": "General"
  },
  {
    "id": "q168",
    "questionText": "An application needs to store session data that expires after 30 minutes. Which service would be most appropriate?",
    "options": [
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      },
      {
        "text": "Amazon ElastiCache",
        "isCorrect": true
      },
      {
        "text": "Amazon S3",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon ElastiCache (Redis or Memcached) is perfect for session storage as it provides sub-millisecond latency, automatic expiration (TTL), and is designed for temporary data caching.",
    "awsService": "ElastiCache"
  },
  {
    "id": "q169",
    "questionText": "A company needs to run analytics on their S3 data without moving it to another service. Which AWS service allows querying S3 data directly?",
    "options": [
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      },
      {
        "text": "Amazon Athena",
        "isCorrect": true
      },
      {
        "text": "Amazon EMR",
        "isCorrect": false
      },
      {
        "text": "AWS Glue",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using standard SQL without needing to move or transform the data.",
    "awsService": "Athena"
  },
  {
    "id": "q170",
    "questionText": "A mobile application needs to authenticate users and provide temporary AWS credentials. Which service should be used?",
    "options": [
      {
        "text": "Amazon Cognito",
        "isCorrect": true
      },
      {
        "text": "AWS IAM",
        "isCorrect": false
      },
      {
        "text": "AWS STS",
        "isCorrect": false
      },
      {
        "text": "AWS Directory Service",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Cognito provides authentication, authorization, and user management for web and mobile apps, and can provide temporary AWS credentials to authenticated users through identity pools.",
    "awsService": "Cognito"
  },
  {
    "id": "q171",
    "questionText": "A company has a web application that stores user session data in memory on EC2 instances. The application needs to be highly available across multiple AZs. What is the best solution for session storage?",
    "options": [
      {
        "text": "Store sessions in local EC2 instance memory",
        "isCorrect": false
      },
      {
        "text": "Use Amazon ElastiCache for Redis",
        "isCorrect": true
      },
      {
        "text": "Store sessions in Amazon S3",
        "isCorrect": false
      },
      {
        "text": "Use Amazon RDS for session storage",
        "isCorrect": false
      }
    ],
    "explanation": "ElastiCache for Redis provides high availability, automatic failover, and sub-millisecond latency perfect for session storage across multiple AZs.",
    "awsService": "ElastiCache"
  },
  {
    "id": "q172",
    "questionText": "A startup needs to deploy a simple web application quickly without managing servers. The application receives sporadic traffic. Which service combination is most cost-effective?",
    "options": [
      {
        "text": "EC2 + Application Load Balancer",
        "isCorrect": false
      },
      {
        "text": "Lambda + API Gateway",
        "isCorrect": true
      },
      {
        "text": "ECS Fargate + ALB",
        "isCorrect": false
      },
      {
        "text": "Elastic Beanstalk",
        "isCorrect": false
      }
    ],
    "explanation": "Lambda + API Gateway is serverless, automatically scales to zero when not in use, and charges only for actual requests - perfect for sporadic traffic patterns.",
    "awsService": "Lambda"
  },
  {
    "id": "q173",
    "questionText": "A company wants to analyze clickstream data in real-time to detect fraud. The data comes in at 10,000 events per second. Which architecture is most suitable?",
    "options": [
      {
        "text": "S3 + Athena",
        "isCorrect": false
      },
      {
        "text": "Kinesis Data Streams + Lambda",
        "isCorrect": true
      },
      {
        "text": "SQS + EC2",
        "isCorrect": false
      },
      {
        "text": "DynamoDB + CloudWatch",
        "isCorrect": false
      }
    ],
    "explanation": "Kinesis Data Streams can handle high-throughput real-time data ingestion, and Lambda can process events immediately for real-time fraud detection.",
    "awsService": "Kinesis"
  },
  {
    "id": "q174",
    "questionText": "An application needs to store configuration data that is accessed frequently but changes rarely. The data must be encrypted and versioned. Which service is most appropriate?",
    "options": [
      {
        "text": "Amazon S3",
        "isCorrect": false
      },
      {
        "text": "AWS Systems Manager Parameter Store",
        "isCorrect": true
      },
      {
        "text": "AWS Secrets Manager",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      }
    ],
    "explanation": "Parameter Store provides secure storage for configuration data with built-in versioning, encryption via KMS, and high availability with low latency access.",
    "awsService": "Systems Manager"
  },
  {
    "id": "q175",
    "questionText": "A company needs to ensure their Lambda functions can access RDS databases in a private subnet. What is required?",
    "options": [
      {
        "text": "Configure Lambda with VPC settings",
        "isCorrect": true
      },
      {
        "text": "Make RDS publicly accessible",
        "isCorrect": false
      },
      {
        "text": "Use Lambda@Edge",
        "isCorrect": false
      },
      {
        "text": "Create a VPC endpoint",
        "isCorrect": false
      }
    ],
    "explanation": "Lambda functions must be configured with VPC settings (subnet and security group) to access resources in private subnets like RDS databases.",
    "awsService": "Lambda"
  },
  {
    "id": "q176",
    "questionText": "A media company needs to transcode video files uploaded to S3. The processing takes 30-60 minutes per file. Which compute option is most cost-effective?",
    "options": [
      {
        "text": "AWS Lambda",
        "isCorrect": false
      },
      {
        "text": "EC2 Spot Instances",
        "isCorrect": true
      },
      {
        "text": "EC2 On-Demand Instances",
        "isCorrect": false
      },
      {
        "text": "AWS Batch on Fargate",
        "isCorrect": false
      }
    ],
    "explanation": "EC2 Spot Instances can provide up to 90% cost savings for batch processing workloads that can tolerate interruptions, perfect for video transcoding jobs.",
    "awsService": "EC2"
  },
  {
    "id": "q177",
    "questionText": "A company wants to implement auto-scaling for their containerized application based on custom metrics like queue length. Which service should they use?",
    "options": [
      {
        "text": "EC2 Auto Scaling",
        "isCorrect": false
      },
      {
        "text": "ECS Service Auto Scaling",
        "isCorrect": true
      },
      {
        "text": "Lambda Auto Scaling",
        "isCorrect": false
      },
      {
        "text": "Application Auto Scaling",
        "isCorrect": false
      }
    ],
    "explanation": "ECS Service Auto Scaling can scale containers based on CloudWatch metrics including custom metrics like queue length, providing precise scaling control.",
    "awsService": "ECS"
  },
  {
    "id": "q178",
    "questionText": "An e-commerce site experiences high read traffic during flash sales. The database is MySQL. How can you improve read performance without changing the application code?",
    "options": [
      {
        "text": "Enable Multi-AZ deployment",
        "isCorrect": false
      },
      {
        "text": "Add an ElastiCache layer",
        "isCorrect": true
      },
      {
        "text": "Increase the instance size",
        "isCorrect": false
      },
      {
        "text": "Enable automated backups",
        "isCorrect": false
      }
    ],
    "explanation": "ElastiCache can be used as a read-through cache in front of MySQL, dramatically improving read performance without requiring application code changes.",
    "awsService": "ElastiCache"
  },
  {
    "id": "q179",
    "questionText": "A financial services company needs to ensure all data in transit between their application and S3 is encrypted. What should they implement?",
    "options": [
      {
        "text": "Server-side encryption with S3-managed keys",
        "isCorrect": false
      },
      {
        "text": "HTTPS/TLS for all S3 API calls",
        "isCorrect": true
      },
      {
        "text": "Client-side encryption",
        "isCorrect": false
      },
      {
        "text": "S3 bucket policy for encryption",
        "isCorrect": false
      }
    ],
    "explanation": "HTTPS/TLS encrypts data in transit between the client and S3. This is the standard method for ensuring data is encrypted while being transmitted.",
    "awsService": "S3"
  },
  {
    "id": "q180",
    "questionText": "A company wants to migrate their on-premises Active Directory to AWS while maintaining existing user authentication. Which service should they use?",
    "options": [
      {
        "text": "Amazon Cognito",
        "isCorrect": false
      },
      {
        "text": "AWS Directory Service",
        "isCorrect": true
      },
      {
        "text": "AWS IAM",
        "isCorrect": false
      },
      {
        "text": "AWS SSO",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Directory Service provides managed Microsoft Active Directory in the AWS cloud, allowing seamless migration and integration with existing AD infrastructure.",
    "awsService": "Directory Service"
  },
  {
    "id": "q181",
    "questionText": "An application needs to send email notifications to thousands of users. The emails should be delivered reliably with bounce and complaint tracking. Which service is most appropriate?",
    "options": [
      {
        "text": "Amazon SNS",
        "isCorrect": false
      },
      {
        "text": "Amazon SES",
        "isCorrect": true
      },
      {
        "text": "Amazon SQS",
        "isCorrect": false
      },
      {
        "text": "AWS Lambda",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon SES (Simple Email Service) is designed for bulk email sending with features like bounce and complaint tracking, delivery analytics, and high deliverability.",
    "awsService": "SES"
  },
  {
    "id": "q182",
    "questionText": "A company needs to store structured data with complex queries involving multiple tables and transactions. Which database service is most suitable?",
    "options": [
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      },
      {
        "text": "Amazon RDS",
        "isCorrect": true
      },
      {
        "text": "Amazon ElastiCache",
        "isCorrect": false
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon RDS provides fully managed relational databases that support complex queries, joins across multiple tables, and ACID transactions - perfect for structured data with complex relationships.",
    "awsService": "RDS"
  },
  {
    "id": "q183",
    "questionText": "A mobile gaming company needs to handle sudden spikes in traffic during game launches. Their API can scale from 100 to 10,000 requests per second. Which architecture is most cost-effective?",
    "options": [
      {
        "text": "EC2 instances with Auto Scaling",
        "isCorrect": false
      },
      {
        "text": "API Gateway + Lambda",
        "isCorrect": true
      },
      {
        "text": "ECS with Fargate",
        "isCorrect": false
      },
      {
        "text": "Elastic Load Balancer + EC2",
        "isCorrect": false
      }
    ],
    "explanation": "API Gateway + Lambda provides automatic scaling from zero to thousands of concurrent executions without pre-provisioning, making it perfect for unpredictable traffic spikes.",
    "awsService": "API Gateway"
  },
  {
    "id": "q184",
    "questionText": "A company wants to analyze customer behavior data to recommend products. They need to process terabytes of historical data. Which service is most appropriate?",
    "options": [
      {
        "text": "Amazon RDS",
        "isCorrect": false
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": true
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": false
      },
      {
        "text": "Amazon ElastiCache",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Redshift is a data warehouse service optimized for analyzing large datasets (terabytes to petabytes) and complex analytical queries perfect for recommendation engines.",
    "awsService": "Redshift"
  },
  {
    "id": "q185",
    "questionText": "An application needs to process images uploaded by users to extract text. The processing should be automatic and scalable. Which service combination is best?",
    "options": [
      {
        "text": "S3 + Lambda + Textract",
        "isCorrect": true
      },
      {
        "text": "EC2 + OpenCV",
        "isCorrect": false
      },
      {
        "text": "ECS + Custom OCR",
        "isCorrect": false
      },
      {
        "text": "SageMaker + Custom Model",
        "isCorrect": false
      }
    ],
    "explanation": "S3 can trigger Lambda functions automatically when images are uploaded, and Lambda can call Amazon Textract to extract text from images - providing a fully managed, scalable solution.",
    "awsService": "Textract"
  },
  {
    "id": "q186",
    "questionText": "A startup wants to implement CI/CD for their web application. They need automated testing and deployment to multiple environments. Which AWS service provides this capability?",
    "options": [
      {
        "text": "AWS CodeBuild only",
        "isCorrect": false
      },
      {
        "text": "AWS CodePipeline",
        "isCorrect": true
      },
      {
        "text": "AWS CodeDeploy only",
        "isCorrect": false
      },
      {
        "text": "AWS CodeCommit only",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CodePipeline orchestrates the entire CI/CD workflow, integrating with CodeBuild for testing and CodeDeploy for deployment across multiple environments.",
    "awsService": "CodePipeline"
  },
  {
    "id": "q187",
    "questionText": "A company needs to ensure their EC2 instances are compliant with security standards and automatically remediate violations. Which service should they use?",
    "options": [
      {
        "text": "AWS CloudTrail",
        "isCorrect": false
      },
      {
        "text": "AWS Config",
        "isCorrect": true
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": false
      },
      {
        "text": "AWS Security Hub",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Config can monitor resource configurations against compliance rules and trigger automatic remediation actions when violations are detected.",
    "awsService": "Config"
  },
  {
    "id": "q188",
    "questionText": "A data science team needs to train machine learning models using GPU instances. The training jobs run for several hours and can be interrupted. Which compute option is most cost-effective?",
    "options": [
      {
        "text": "EC2 On-Demand GPU instances",
        "isCorrect": false
      },
      {
        "text": "EC2 Spot GPU instances",
        "isCorrect": true
      },
      {
        "text": "SageMaker training jobs",
        "isCorrect": false
      },
      {
        "text": "Lambda with high memory",
        "isCorrect": false
      }
    ],
    "explanation": "EC2 Spot instances can provide up to 90% cost savings for interruptible workloads. GPU training jobs that can handle interruptions benefit significantly from Spot pricing.",
    "awsService": "EC2"
  },
  {
    "id": "q189",
    "questionText": "A company needs to connect their on-premises data center to AWS with a dedicated, high-bandwidth connection for hybrid cloud architecture. Which service should they use?",
    "options": [
      {
        "text": "VPN Gateway",
        "isCorrect": false
      },
      {
        "text": "AWS Direct Connect",
        "isCorrect": true
      },
      {
        "text": "Internet Gateway",
        "isCorrect": false
      },
      {
        "text": "NAT Gateway",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Direct Connect provides a dedicated network connection from on-premises to AWS, offering higher bandwidth, lower latency, and more consistent network experience than VPN.",
    "awsService": "Direct Connect"
  },
  {
    "id": "q190",
    "questionText": "An application generates log files that need to be analyzed for security threats. The analysis should happen in real-time. Which architecture is most suitable?",
    "options": [
      {
        "text": "S3 + Athena",
        "isCorrect": false
      },
      {
        "text": "CloudWatch Logs + Lambda",
        "isCorrect": true
      },
      {
        "text": "ELK Stack on EC2",
        "isCorrect": false
      },
      {
        "text": "Kinesis Data Firehose + S3",
        "isCorrect": false
      }
    ],
    "explanation": "CloudWatch Logs can stream log data to Lambda in real-time, allowing immediate analysis and response to security threats as they appear in the logs.",
    "awsService": "CloudWatch"
  },
  {
    "id": "q191",
    "questionText": "A company wants to implement blue-green deployments for their containerized application running on ECS. What is the best approach?",
    "options": [
      {
        "text": "Use ECS rolling updates",
        "isCorrect": false
      },
      {
        "text": "Use CodeDeploy with ECS",
        "isCorrect": true
      },
      {
        "text": "Manually switch load balancer targets",
        "isCorrect": false
      },
      {
        "text": "Use Auto Scaling groups",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CodeDeploy supports blue-green deployments for ECS services, automatically managing the deployment process and traffic shifting between environments.",
    "awsService": "CodeDeploy"
  },
  {
    "id": "q192",
    "questionText": "A gaming company needs to store player profiles with flexible schema and fast read/write performance for millions of users. Which database is most suitable?",
    "options": [
      {
        "text": "Amazon RDS MySQL",
        "isCorrect": false
      },
      {
        "text": "Amazon DynamoDB",
        "isCorrect": true
      },
      {
        "text": "Amazon Aurora",
        "isCorrect": false
      },
      {
        "text": "Amazon Redshift",
        "isCorrect": false
      }
    ],
    "explanation": "DynamoDB provides single-digit millisecond performance at any scale, flexible NoSQL schema perfect for varying player profile structures, and seamless scaling for millions of users.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q193",
    "questionText": "A company needs to ensure their S3 data is replicated to another region for disaster recovery. What should they implement?",
    "options": [
      {
        "text": "S3 Versioning",
        "isCorrect": false
      },
      {
        "text": "S3 Cross-Region Replication",
        "isCorrect": true
      },
      {
        "text": "S3 Transfer Acceleration",
        "isCorrect": false
      },
      {
        "text": "S3 Lifecycle policies",
        "isCorrect": false
      }
    ],
    "explanation": "S3 Cross-Region Replication automatically replicates objects to a bucket in another AWS region, providing geographic redundancy for disaster recovery.",
    "awsService": "S3"
  },
  {
    "id": "q194",
    "questionText": "An IoT application collects sensor data from thousands of devices. The data needs to be processed and stored for analytics. Which architecture handles this best?",
    "options": [
      {
        "text": "API Gateway + Lambda + RDS",
        "isCorrect": false
      },
      {
        "text": "IoT Core + Kinesis + S3",
        "isCorrect": true
      },
      {
        "text": "ALB + EC2 + DynamoDB",
        "isCorrect": false
      },
      {
        "text": "CloudFront + S3 + Athena",
        "isCorrect": false
      }
    ],
    "explanation": "IoT Core securely connects devices, Kinesis handles high-throughput data streaming from thousands of devices, and S3 provides cost-effective storage for analytics.",
    "awsService": "IoT Core"
  },
  {
    "id": "q195",
    "questionText": "A company wants to automate the deployment of infrastructure using code. Which AWS service provides this capability?",
    "options": [
      {
        "text": "AWS Systems Manager",
        "isCorrect": false
      },
      {
        "text": "AWS CloudFormation",
        "isCorrect": true
      },
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "AWS OpsWorks",
        "isCorrect": false
      }
    ],
    "explanation": "AWS CloudFormation allows you to define infrastructure as code using JSON or YAML templates, enabling automated, repeatable, and version-controlled infrastructure deployments.",
    "awsService": "CloudFormation"
  },
  {
    "id": "q196",
    "questionText": "A web application experiences slow database queries during peak hours. The database CPU and memory utilization are normal. What is the most likely cause and solution?",
    "options": [
      {
        "text": "Increase instance size",
        "isCorrect": false
      },
      {
        "text": "Optimize database queries and add indexes",
        "isCorrect": true
      },
      {
        "text": "Enable Multi-AZ deployment",
        "isCorrect": false
      },
      {
        "text": "Add read replicas",
        "isCorrect": false
      }
    ],
    "explanation": "If CPU and memory are normal but queries are slow, the issue is likely inefficient queries or missing indexes. Query optimization and proper indexing will improve performance.",
    "awsService": "RDS"
  },
  {
    "id": "q197",
    "questionText": "A company needs to process batch jobs that can run for up to 2 hours and require specific GPU configurations. Which service is most appropriate?",
    "options": [
      {
        "text": "AWS Lambda",
        "isCorrect": false
      },
      {
        "text": "AWS Batch",
        "isCorrect": true
      },
      {
        "text": "Amazon ECS",
        "isCorrect": false
      },
      {
        "text": "EC2 Spot Instances",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Batch is specifically designed for batch computing workloads, automatically managing the underlying compute resources and job queues, with support for GPU instances.",
    "awsService": "Batch"
  },
  {
    "id": "q198",
    "questionText": "A media streaming company needs to deliver content globally with low latency and DDoS protection. Which service combination provides this?",
    "options": [
      {
        "text": "S3 + Route 53",
        "isCorrect": false
      },
      {
        "text": "CloudFront + AWS Shield",
        "isCorrect": true
      },
      {
        "text": "ELB + WAF",
        "isCorrect": false
      },
      {
        "text": "Global Accelerator + GuardDuty",
        "isCorrect": false
      }
    ],
    "explanation": "CloudFront provides global content delivery with low latency through edge locations, while AWS Shield provides DDoS protection for the CloudFront distribution.",
    "awsService": "CloudFront"
  },
  {
    "id": "q199",
    "questionText": "A company wants to analyze customer reviews to determine sentiment. They have thousands of reviews to process. Which AI service should they use?",
    "options": [
      {
        "text": "Amazon Textract",
        "isCorrect": false
      },
      {
        "text": "Amazon Comprehend",
        "isCorrect": true
      },
      {
        "text": "Amazon Rekognition",
        "isCorrect": false
      },
      {
        "text": "Amazon Translate",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Comprehend is a natural language processing service that can analyze text for sentiment, entities, key phrases, and topics - perfect for review analysis.",
    "awsService": "Comprehend"
  },
  {
    "id": "q200",
    "questionText": "A development team needs to securely store database passwords and API keys that their applications can retrieve at runtime. Which service is most appropriate?",
    "options": [
      {
        "text": "AWS Systems Manager Parameter Store",
        "isCorrect": false
      },
      {
        "text": "AWS Secrets Manager",
        "isCorrect": true
      },
      {
        "text": "AWS KMS",
        "isCorrect": false
      },
      {
        "text": "S3 with encryption",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Secrets Manager is specifically designed for storing and retrieving sensitive information like database credentials and API keys, with automatic rotation capabilities.",
    "awsService": "Secrets Manager"
  },
  {
    "id": "q201",
    "questionText": "A company runs a critical application that requires 99.99% availability. The RDS database must be highly available across multiple regions. What is the best architecture?",
    "options": [
      {
        "text": "RDS Multi-AZ in one region",
        "isCorrect": false
      },
      {
        "text": "RDS with read replicas in multiple regions",
        "isCorrect": true
      },
      {
        "text": "RDS with automated backups",
        "isCorrect": false
      },
      {
        "text": "Single RDS instance with EBS snapshots",
        "isCorrect": false
      }
    ],
    "explanation": "RDS read replicas in multiple regions provide cross-region disaster recovery and can be promoted to master in case of regional failure, achieving the highest availability.",
    "awsService": "RDS"
  },
  {
    "id": "q202",
    "questionText": "A startup needs to build a REST API that can handle unpredictable traffic spikes with minimal operational overhead. Which solution is most cost-effective?",
    "options": [
      {
        "text": "EC2 Auto Scaling + ALB",
        "isCorrect": false
      },
      {
        "text": "API Gateway + Lambda",
        "isCorrect": true
      },
      {
        "text": "ECS Fargate + ALB",
        "isCorrect": false
      },
      {
        "text": "Elastic Beanstalk",
        "isCorrect": false
      }
    ],
    "explanation": "API Gateway + Lambda provides serverless REST API with automatic scaling, pay-per-request pricing, and zero operational overhead - perfect for startups with unpredictable traffic.",
    "awsService": "API Gateway"
  },
  {
    "id": "q203",
    "questionText": "A data analytics company processes large CSV files (100GB each) stored in S3. The processing takes 2-3 hours per file. What is the most cost-effective compute option?",
    "options": [
      {
        "text": "Lambda functions",
        "isCorrect": false
      },
      {
        "text": "EC2 Spot Instances",
        "isCorrect": true
      },
      {
        "text": "EC2 Reserved Instances",
        "isCorrect": false
      },
      {
        "text": "Fargate",
        "isCorrect": false
      }
    ],
    "explanation": "EC2 Spot Instances provide up to 90% cost savings for batch processing workloads that can tolerate interruptions, perfect for long-running data processing jobs.",
    "awsService": "EC2"
  },
  {
    "id": "q204",
    "questionText": "A mobile app needs to sync user data across devices in real-time. The data should be available offline and sync when connectivity is restored. Which service is most appropriate?",
    "options": [
      {
        "text": "DynamoDB with DynamoDB Streams",
        "isCorrect": false
      },
      {
        "text": "AppSync with offline capabilities",
        "isCorrect": true
      },
      {
        "text": "Cognito Sync",
        "isCorrect": false
      },
      {
        "text": "S3 with Transfer Acceleration",
        "isCorrect": false
      }
    ],
    "explanation": "AWS AppSync provides real-time data synchronization, offline capabilities, and automatic conflict resolution for mobile and web applications.",
    "awsService": "AppSync"
  },
  {
    "id": "q205",
    "questionText": "A company needs to ensure their EC2 instances are patched monthly with zero downtime. What is the best approach?",
    "options": [
      {
        "text": "Manual patching during maintenance windows",
        "isCorrect": false
      },
      {
        "text": "Systems Manager Patch Manager with blue-green deployment",
        "isCorrect": true
      },
      {
        "text": "Auto Scaling with instance refresh",
        "isCorrect": false
      },
      {
        "text": "Lambda function to restart instances",
        "isCorrect": false
      }
    ],
    "explanation": "Systems Manager Patch Manager can automate patching, and when combined with blue-green deployment strategies, can achieve zero-downtime patching.",
    "awsService": "Systems Manager"
  },
  {
    "id": "q206",
    "questionText": "An e-commerce website experiences 10x traffic increase during Black Friday. The application uses session-based authentication. How should sessions be managed?",
    "options": [
      {
        "text": "Store sessions in EC2 local storage",
        "isCorrect": false
      },
      {
        "text": "Use ElastiCache for session storage",
        "isCorrect": true
      },
      {
        "text": "Store sessions in RDS",
        "isCorrect": false
      },
      {
        "text": "Use EBS volumes for sessions",
        "isCorrect": false
      }
    ],
    "explanation": "ElastiCache provides high-performance, distributed session storage that can scale with traffic and provides sub-millisecond latency for session retrieval.",
    "awsService": "ElastiCache"
  },
  {
    "id": "q207",
    "questionText": "A financial institution needs to encrypt all data at rest and in transit with customer-managed encryption keys. Which combination satisfies this requirement?",
    "options": [
      {
        "text": "KMS with AWS-managed keys + TLS",
        "isCorrect": false
      },
      {
        "text": "KMS with customer-managed CMKs + TLS",
        "isCorrect": true
      },
      {
        "text": "S3 server-side encryption + HTTPS",
        "isCorrect": false
      },
      {
        "text": "CloudHSM + VPN",
        "isCorrect": false
      }
    ],
    "explanation": "KMS with customer-managed CMKs provides full control over encryption keys for data at rest, while TLS ensures data in transit encryption.",
    "awsService": "KMS"
  },
  {
    "id": "q208",
    "questionText": "A gaming company needs to store player session data that expires after 24 hours. The data must be highly available and have sub-millisecond latency. Which service is best?",
    "options": [
      {
        "text": "DynamoDB with TTL",
        "isCorrect": true
      },
      {
        "text": "RDS with scheduled cleanup",
        "isCorrect": false
      },
      {
        "text": "ElastiCache",
        "isCorrect": false
      },
      {
        "text": "S3 with lifecycle policies",
        "isCorrect": false
      }
    ],
    "explanation": "DynamoDB provides single-digit millisecond latency, built-in TTL (Time To Live) for automatic expiration, and high availability across multiple AZs.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q209",
    "questionText": "A company wants to run Docker containers without managing the underlying infrastructure. They need persistent storage for databases. Which service combination is appropriate?",
    "options": [
      {
        "text": "ECS on EC2 with EBS",
        "isCorrect": false
      },
      {
        "text": "Fargate with EFS",
        "isCorrect": true
      },
      {
        "text": "Lambda with S3",
        "isCorrect": false
      },
      {
        "text": "EKS with instance store",
        "isCorrect": false
      }
    ],
    "explanation": "Fargate provides serverless container hosting, and EFS provides persistent, shared file storage that can be mounted by Fargate containers.",
    "awsService": "Fargate"
  },
  {
    "id": "q210",
    "questionText": "A media company needs to transcode video files uploaded to S3. The transcoding process is triggered by file uploads and takes 10-45 minutes. What architecture is most suitable?",
    "options": [
      {
        "text": "S3 â†’ Lambda â†’ MediaConvert",
        "isCorrect": false
      },
      {
        "text": "S3 â†’ SQS â†’ EC2 â†’ MediaConvert",
        "isCorrect": true
      },
      {
        "text": "S3 â†’ SNS â†’ Lambda â†’ MediaConvert",
        "isCorrect": false
      },
      {
        "text": "S3 â†’ Step Functions â†’ MediaConvert",
        "isCorrect": false
      }
    ],
    "explanation": "Lambda has a 15-minute execution limit. S3 can trigger SQS messages, which EC2 instances can process to handle long-running MediaConvert jobs.",
    "awsService": "MediaConvert"
  },
  {
    "id": "q211",
    "questionText": "A company needs to implement disaster recovery with RPO of 1 hour and RTO of 4 hours. Their current infrastructure is entirely on-premises. What AWS strategy is most cost-effective?",
    "options": [
      {
        "text": "Multi-site active/active",
        "isCorrect": false
      },
      {
        "text": "Warm standby in AWS",
        "isCorrect": false
      },
      {
        "text": "Pilot light in AWS",
        "isCorrect": true
      },
      {
        "text": "Backup and restore in AWS",
        "isCorrect": false
      }
    ],
    "explanation": "Pilot light maintains minimal infrastructure in AWS (databases, key services) that can be quickly scaled up to meet 4-hour RTO while minimizing costs.",
    "awsService": "Disaster Recovery"
  },
  {
    "id": "q212",
    "questionText": "An application needs to process messages in strict order (FIFO) with exactly-once processing. Which service should be used?",
    "options": [
      {
        "text": "Standard SQS queue",
        "isCorrect": false
      },
      {
        "text": "SQS FIFO queue",
        "isCorrect": true
      },
      {
        "text": "SNS topic",
        "isCorrect": false
      },
      {
        "text": "Kinesis Data Streams",
        "isCorrect": false
      }
    ],
    "explanation": "SQS FIFO queues guarantee message ordering and exactly-once processing, perfect for applications requiring strict message sequencing.",
    "awsService": "SQS"
  },
  {
    "id": "q213",
    "questionText": "A machine learning team needs to train models using large datasets stored in S3. Training jobs require GPU instances and can run for several days. What is the most cost-effective solution?",
    "options": [
      {
        "text": "SageMaker training jobs",
        "isCorrect": false
      },
      {
        "text": "EC2 Spot instances with persistent storage",
        "isCorrect": true
      },
      {
        "text": "EC2 On-Demand GPU instances",
        "isCorrect": false
      },
      {
        "text": "Lambda with high memory allocation",
        "isCorrect": false
      }
    ],
    "explanation": "EC2 Spot instances provide significant cost savings for long-running, interruptible workloads like ML training, with EBS for persistent storage.",
    "awsService": "EC2"
  },
  {
    "id": "q214",
    "questionText": "A company wants to analyze clickstream data in real-time to personalize user experience. The data volume is 50,000 events per second. Which architecture is most suitable?",
    "options": [
      {
        "text": "Kinesis Data Streams â†’ Lambda â†’ DynamoDB",
        "isCorrect": true
      },
      {
        "text": "SQS â†’ EC2 â†’ RDS",
        "isCorrect": false
      },
      {
        "text": "S3 â†’ Athena â†’ QuickSight",
        "isCorrect": false
      },
      {
        "text": "SNS â†’ Lambda â†’ ElastiCache",
        "isCorrect": false
      }
    ],
    "explanation": "Kinesis Data Streams handles high-throughput real-time data, Lambda processes events, and DynamoDB provides fast storage for personalization data.",
    "awsService": "Kinesis"
  },
  {
    "id": "q215",
    "questionText": "A SaaS company needs to provide each customer with isolated data storage while sharing the same application code. What is the best approach?",
    "options": [
      {
        "text": "Separate RDS instance per customer",
        "isCorrect": false
      },
      {
        "text": "Multi-tenant DynamoDB with partition keys",
        "isCorrect": true
      },
      {
        "text": "Separate S3 bucket per customer",
        "isCorrect": false
      },
      {
        "text": "Shared RDS with row-level security",
        "isCorrect": false
      }
    ],
    "explanation": "DynamoDB with customer-specific partition keys provides logical data isolation in a multi-tenant architecture while sharing infrastructure costs.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q216",
    "questionText": "A company needs to ensure their web application can handle a sudden increase from 1,000 to 100,000 concurrent users. The application is stateless. What architecture provides this scalability?",
    "options": [
      {
        "text": "Single large EC2 instance",
        "isCorrect": false
      },
      {
        "text": "Auto Scaling Group with ALB",
        "isCorrect": true
      },
      {
        "text": "Reserved EC2 instances",
        "isCorrect": false
      },
      {
        "text": "Elastic Beanstalk single instance",
        "isCorrect": false
      }
    ],
    "explanation": "Auto Scaling Groups automatically add/remove instances based on demand, while ALB distributes traffic across instances, providing the needed scalability.",
    "awsService": "Auto Scaling"
  },
  {
    "id": "q217",
    "questionText": "A financial services company needs to ensure all API calls are logged and monitored for compliance. Which combination of services provides comprehensive auditing?",
    "options": [
      {
        "text": "CloudWatch Logs only",
        "isCorrect": false
      },
      {
        "text": "CloudTrail + CloudWatch + Config",
        "isCorrect": true
      },
      {
        "text": "VPC Flow Logs only",
        "isCorrect": false
      },
      {
        "text": "GuardDuty only",
        "isCorrect": false
      }
    ],
    "explanation": "CloudTrail logs API calls, CloudWatch provides monitoring and alerting, and Config tracks resource configuration changes for comprehensive compliance auditing.",
    "awsService": "CloudTrail"
  },
  {
    "id": "q218",
    "questionText": "An IoT application collects telemetry data from vehicles. The data must be processed within 1 second of arrival to detect emergencies. Which service combination is most appropriate?",
    "options": [
      {
        "text": "IoT Core â†’ Kinesis Data Streams â†’ Lambda",
        "isCorrect": true
      },
      {
        "text": "IoT Core â†’ S3 â†’ Athena",
        "isCorrect": false
      },
      {
        "text": "IoT Core â†’ SQS â†’ EC2",
        "isCorrect": false
      },
      {
        "text": "IoT Core â†’ DynamoDB â†’ Lambda",
        "isCorrect": false
      }
    ],
    "explanation": "IoT Core ingests data, Kinesis Data Streams provides real-time processing, and Lambda can process events within seconds for emergency detection.",
    "awsService": "IoT Core"
  },
  {
    "id": "q219",
    "questionText": "A company wants to migrate their on-premises PostgreSQL database to AWS with minimal downtime. The database is 2TB and actively used. What is the best migration approach?",
    "options": [
      {
        "text": "Export/import using pg_dump",
        "isCorrect": false
      },
      {
        "text": "AWS Database Migration Service (DMS)",
        "isCorrect": true
      },
      {
        "text": "Manual replication setup",
        "isCorrect": false
      },
      {
        "text": "Stop application and copy data",
        "isCorrect": false
      }
    ],
    "explanation": "AWS DMS provides continuous data replication during migration, allowing minimal downtime by keeping source and target databases in sync during the migration process.",
    "awsService": "DMS"
  },
  {
    "id": "q220",
    "questionText": "A mobile app backend needs to send push notifications to millions of devices across iOS and Android platforms. Which service should be used?",
    "options": [
      {
        "text": "SES for email notifications",
        "isCorrect": false
      },
      {
        "text": "SNS for mobile push notifications",
        "isCorrect": true
      },
      {
        "text": "SQS for message queuing",
        "isCorrect": false
      },
      {
        "text": "Lambda for custom notifications",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon SNS supports mobile push notifications for iOS, Android, and other platforms, handling the complexity of different notification services.",
    "awsService": "SNS"
  },
  {
    "id": "q221",
    "questionText": "A data warehouse needs to store 100TB of historical sales data for analytics. Queries are run monthly for reporting. Which storage solution is most cost-effective?",
    "options": [
      {
        "text": "RDS with large instances",
        "isCorrect": false
      },
      {
        "text": "Redshift with Reserved Instances",
        "isCorrect": true
      },
      {
        "text": "DynamoDB with provisioned capacity",
        "isCorrect": false
      },
      {
        "text": "S3 with frequent access tier",
        "isCorrect": false
      }
    ],
    "explanation": "Redshift is designed for data warehousing and analytics on large datasets. Reserved Instances provide significant cost savings for predictable workloads like monthly reporting.",
    "awsService": "Redshift"
  },
  {
    "id": "q222",
    "questionText": "A company runs microservices that need to communicate asynchronously. Each service should be able to publish and subscribe to multiple message types. What is the best messaging pattern?",
    "options": [
      {
        "text": "Point-to-point with SQS",
        "isCorrect": false
      },
      {
        "text": "Publish-subscribe with SNS and SQS",
        "isCorrect": true
      },
      {
        "text": "Direct service-to-service calls",
        "isCorrect": false
      },
      {
        "text": "Database-based messaging",
        "isCorrect": false
      }
    ],
    "explanation": "SNS provides publish-subscribe messaging where services can publish to topics, and multiple SQS queues can subscribe to receive relevant messages for each microservice.",
    "awsService": "SNS"
  },
  {
    "id": "q223",
    "questionText": "A web application needs to store user-uploaded images with automatic image resizing and thumbnail generation. What architecture is most efficient?",
    "options": [
      {
        "text": "Upload to EC2, process images, store in S3",
        "isCorrect": false
      },
      {
        "text": "S3 â†’ Lambda â†’ S3 for processed images",
        "isCorrect": true
      },
      {
        "text": "CloudFront â†’ Lambda@Edge for processing",
        "isCorrect": false
      },
      {
        "text": "API Gateway â†’ EC2 â†’ S3",
        "isCorrect": false
      }
    ],
    "explanation": "S3 can trigger Lambda functions automatically when images are uploaded, Lambda can process/resize images, and store results back to S3 - providing a serverless, scalable solution.",
    "awsService": "Lambda"
  },
  {
    "id": "q224",
    "questionText": "A company needs to ensure their application deployment can be rolled back quickly if issues are detected. They use containerized applications. What deployment strategy is best?",
    "options": [
      {
        "text": "Rolling deployment",
        "isCorrect": false
      },
      {
        "text": "Blue-green deployment",
        "isCorrect": true
      },
      {
        "text": "In-place deployment",
        "isCorrect": false
      },
      {
        "text": "Canary deployment",
        "isCorrect": false
      }
    ],
    "explanation": "Blue-green deployment maintains two identical environments, allowing instant rollback by switching traffic back to the previous (blue) environment if issues occur.",
    "awsService": "CodeDeploy"
  },
  {
    "id": "q225",
    "questionText": "A gaming company needs to store player profiles that can be accessed globally with single-digit millisecond latency. The data is frequently updated. Which solution is most appropriate?",
    "options": [
      {
        "text": "RDS with read replicas in multiple regions",
        "isCorrect": false
      },
      {
        "text": "DynamoDB Global Tables",
        "isCorrect": true
      },
      {
        "text": "ElastiCache clusters in multiple regions",
        "isCorrect": false
      },
      {
        "text": "S3 with CloudFront",
        "isCorrect": false
      }
    ],
    "explanation": "DynamoDB Global Tables provide single-digit millisecond latency globally with multi-master replication, perfect for frequently updated gaming data.",
    "awsService": "DynamoDB"
  },
  {
    "id": "q226",
    "questionText": "A company wants to analyze their AWS costs and identify opportunities for optimization. Which service provides detailed cost analysis and recommendations?",
    "options": [
      {
        "text": "CloudWatch Billing Alerts",
        "isCorrect": false
      },
      {
        "text": "AWS Cost Explorer with recommendations",
        "isCorrect": true
      },
      {
        "text": "AWS Budgets",
        "isCorrect": false
      },
      {
        "text": "Trusted Advisor",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Cost Explorer provides detailed cost analysis, usage patterns, and cost optimization recommendations to help reduce AWS spending.",
    "awsService": "Cost Management"
  },
  {
    "id": "q227",
    "questionText": "A healthcare application needs to ensure HIPAA compliance for storing patient data. Which combination provides the necessary security controls?",
    "options": [
      {
        "text": "S3 with default encryption",
        "isCorrect": false
      },
      {
        "text": "S3 with KMS encryption + CloudTrail + VPC",
        "isCorrect": true
      },
      {
        "text": "RDS with password authentication",
        "isCorrect": false
      },
      {
        "text": "EC2 with local storage",
        "isCorrect": false
      }
    ],
    "explanation": "HIPAA compliance requires encryption (KMS), audit logging (CloudTrail), and network isolation (VPC) to protect sensitive healthcare data.",
    "awsService": "Security"
  },
  {
    "id": "q228",
    "questionText": "A company needs to process large amounts of streaming data and run complex analytics in real-time. The data arrives at 100,000 records per second. Which service is most suitable?",
    "options": [
      {
        "text": "Kinesis Data Streams with Lambda",
        "isCorrect": false
      },
      {
        "text": "Kinesis Data Analytics",
        "isCorrect": true
      },
      {
        "text": "SQS with EC2 processing",
        "isCorrect": false
      },
      {
        "text": "DynamoDB Streams",
        "isCorrect": false
      }
    ],
    "explanation": "Kinesis Data Analytics is specifically designed for real-time analytics on streaming data, using SQL queries to process high-throughput data streams.",
    "awsService": "Kinesis"
  },
  {
    "id": "q229",
    "questionText": "A development team needs to automate infrastructure provisioning across development, staging, and production environments. What is the best approach?",
    "options": [
      {
        "text": "Manual resource creation",
        "isCorrect": false
      },
      {
        "text": "CloudFormation templates",
        "isCorrect": true
      },
      {
        "text": "AWS CLI scripts",
        "isCorrect": false
      },
      {
        "text": "Terraform with local state",
        "isCorrect": false
      }
    ],
    "explanation": "CloudFormation provides Infrastructure as Code with templates that can be version-controlled and deployed consistently across multiple environments.",
    "awsService": "CloudFormation"
  },
  {
    "id": "q230",
    "questionText": "A company wants to implement a data lake for storing structured and unstructured data from multiple sources. Which combination of services is most appropriate?",
    "options": [
      {
        "text": "RDS + DynamoDB + RedShift",
        "isCorrect": false
      },
      {
        "text": "S3 + Glue + Athena + QuickSight",
        "isCorrect": true
      },
      {
        "text": "EC2 + Hadoop + Spark",
        "isCorrect": false
      },
      {
        "text": "Lambda + DynamoDB + CloudWatch",
        "isCorrect": false
      }
    ],
    "explanation": "S3 provides scalable storage for all data types, Glue catalogs and transforms data, Athena queries data, and QuickSight provides visualization - forming a complete data lake solution.",
    "awsService": "S3"
  },
  {
    "id": "q231",
    "questionText": "A mobile application needs to authenticate users through social media accounts (Google, Facebook) and provide temporary AWS credentials. Which service should be used?",
    "options": [
      {
        "text": "IAM users with access keys",
        "isCorrect": false
      },
      {
        "text": "Cognito Identity Pools",
        "isCorrect": true
      },
      {
        "text": "STS assume role directly",
        "isCorrect": false
      },
      {
        "text": "Custom OAuth implementation",
        "isCorrect": false
      }
    ],
    "explanation": "Cognito Identity Pools enable authentication through social identity providers and provide temporary AWS credentials to authenticated users through STS.",
    "awsService": "Cognito"
  },
  {
    "id": "q232",
    "questionText": "A company runs a legacy application that requires a specific version of Java. They want to migrate to AWS without modifying the application. Which service is most suitable?",
    "options": [
      {
        "text": "Lambda functions",
        "isCorrect": false
      },
      {
        "text": "Elastic Beanstalk",
        "isCorrect": true
      },
      {
        "text": "ECS with Fargate",
        "isCorrect": false
      },
      {
        "text": "API Gateway",
        "isCorrect": false
      }
    ],
    "explanation": "Elastic Beanstalk supports multiple Java versions and platforms, allowing easy deployment of legacy applications without code changes while handling infrastructure management.",
    "awsService": "Elastic Beanstalk"
  },
  {
    "id": "q233",
    "questionText": "A company needs to ensure their critical application can survive the failure of an entire AWS region. What architecture should they implement?",
    "options": [
      {
        "text": "Multi-AZ deployment in one region",
        "isCorrect": false
      },
      {
        "text": "Multi-region active-passive setup",
        "isCorrect": true
      },
      {
        "text": "Single region with backups",
        "isCorrect": false
      },
      {
        "text": "Auto Scaling across AZs",
        "isCorrect": false
      }
    ],
    "explanation": "Multi-region active-passive setup ensures application availability even if an entire region fails, with the passive region ready to take over operations.",
    "awsService": "Global Infrastructure"
  },
  {
    "id": "q234",
    "questionText": "A data science team needs to collaborate on Jupyter notebooks with shared datasets and computing resources. Which service provides this capability?",
    "options": [
      {
        "text": "EC2 with Jupyter installed",
        "isCorrect": false
      },
      {
        "text": "SageMaker Studio",
        "isCorrect": true
      },
      {
        "text": "Lambda with custom runtime",
        "isCorrect": false
      },
      {
        "text": "EMR with Zeppelin",
        "isCorrect": false
      }
    ],
    "explanation": "SageMaker Studio provides a collaborative environment for data scientists with shared Jupyter notebooks, datasets, and managed computing resources.",
    "awsService": "SageMaker"
  },
  {
    "id": "q235",
    "questionText": "A company needs to securely transfer 50TB of data from their on-premises data center to S3. The internet connection is slow and unreliable. What is the best solution?",
    "options": [
      {
        "text": "Direct upload over internet",
        "isCorrect": false
      },
      {
        "text": "AWS Snowball Edge",
        "isCorrect": true
      },
      {
        "text": "AWS DataSync over internet",
        "isCorrect": false
      },
      {
        "text": "S3 Transfer Acceleration",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Snowball Edge is designed for transferring large amounts of data (up to 100TB) when internet connectivity is limited or unreliable.",
    "awsService": "Snowball"
  },
  {
    "id": "q236",
    "questionText": "A company wants to implement automated security scanning of their EC2 instances for vulnerabilities and compliance violations. Which service should they use?",
    "options": [
      {
        "text": "AWS Config",
        "isCorrect": false
      },
      {
        "text": "Amazon Inspector",
        "isCorrect": true
      },
      {
        "text": "AWS CloudTrail",
        "isCorrect": false
      },
      {
        "text": "AWS Security Hub",
        "isCorrect": false
      }
    ],
    "explanation": "Amazon Inspector automatically assesses EC2 instances for security vulnerabilities and provides detailed findings with remediation guidance.",
    "awsService": "Inspector"
  },
  {
    "id": "q237",
    "questionText": "A real-time gaming application needs to maintain WebSocket connections for thousands of concurrent players. Which service combination is most appropriate?",
    "options": [
      {
        "text": "CloudFront + S3",
        "isCorrect": false
      },
      {
        "text": "API Gateway WebSocket + Lambda",
        "isCorrect": true
      },
      {
        "text": "ELB + EC2",
        "isCorrect": false
      },
      {
        "text": "Route 53 + ALB",
        "isCorrect": false
      }
    ],
    "explanation": "API Gateway WebSocket APIs can handle persistent connections and route messages to Lambda functions for real-time, serverless gaming applications.",
    "awsService": "API Gateway"
  },
  {
    "id": "q238",
    "questionText": "A company needs to ensure their application logs are retained for 7 years for compliance. The logs are rarely accessed after 30 days. What is the most cost-effective storage strategy?",
    "options": [
      {
        "text": "CloudWatch Logs with default retention",
        "isCorrect": false
      },
      {
        "text": "S3 with lifecycle policies to Glacier Deep Archive",
        "isCorrect": true
      },
      {
        "text": "EBS snapshots",
        "isCorrect": false
      },
      {
        "text": "RDS with automated backups",
        "isCorrect": false
      }
    ],
    "explanation": "S3 lifecycle policies can automatically transition logs to Glacier Deep Archive after 30 days, providing the lowest cost for long-term retention while maintaining compliance.",
    "awsService": "S3"
  },
  {
    "id": "q239",
    "questionText": "A company wants to implement end-to-end encryption for their web application traffic. Which combination provides complete encryption coverage?",
    "options": [
      {
        "text": "CloudFront + ALB with HTTP",
        "isCorrect": false
      },
      {
        "text": "CloudFront HTTPS + ALB HTTPS + backend HTTPS",
        "isCorrect": true
      },
      {
        "text": "Route 53 + CloudFront HTTP",
        "isCorrect": false
      },
      {
        "text": "WAF + ALB HTTP",
        "isCorrect": false
      }
    ],
    "explanation": "End-to-end encryption requires HTTPS/TLS at every layer: CloudFront to users, ALB to CloudFront, and backend services to ALB.",
    "awsService": "CloudFront"
  },
  {
    "id": "q240",
    "questionText": "A machine learning application needs to process images uploaded by users to detect objects. The processing should be automatic and cost-effective. Which service combination is best?",
    "options": [
      {
        "text": "S3 + Lambda + custom ML model",
        "isCorrect": false
      },
      {
        "text": "S3 + Lambda + Amazon Rekognition",
        "isCorrect": true
      },
      {
        "text": "EC2 + OpenCV + custom processing",
        "isCorrect": false
      },
      {
        "text": "SageMaker + custom endpoint",
        "isCorrect": false
      }
    ],
    "explanation": "S3 triggers Lambda automatically on upload, and Amazon Rekognition provides pre-trained object detection capabilities without the need to build custom ML models.",
    "awsService": "Rekognition"
  },
  {
    "id": "q241",
    "questionText": "A startup needs to deploy a web application with a database. They want minimal operational overhead and automatic scaling. Which combination is most suitable?",
    "options": [
      {
        "text": "EC2 + RDS MySQL",
        "isCorrect": false
      },
      {
        "text": "Amplify + DynamoDB",
        "isCorrect": true
      },
      {
        "text": "ECS + Aurora",
        "isCorrect": false
      },
      {
        "text": "Lambda + RDS",
        "isCorrect": false
      }
    ],
    "explanation": "AWS Amplify provides hosting with automatic scaling and CI/CD, while DynamoDB offers serverless database with automatic scaling and minimal operational overhead.",
    "awsService": "Amplify"
  },
  {
    "id": "q242",
    "questionText": "A company runs batch processing jobs that analyze large datasets. The jobs can be interrupted and restarted. Which compute option provides the best cost optimization?",
    "options": [
      {
        "text": "EC2 Reserved Instances",
        "isCorrect": false
      },
      {
        "text": "EC2 Spot Instances",
        "isCorrect": true
      },
      {
        "text": "EC2 On-Demand Instances",
        "isCorrect": false
      },
      {
        "text": "Fargate Spot",
        "isCorrect": false
      }
    ],
    "explanation": "EC2 Spot Instances provide up to 90% cost savings compared to On-Demand pricing and are perfect for fault-tolerant batch processing jobs that can handle interruptions.",
    "awsService": "EC2"
  },
  {
    "id": "q243",
    "questionText": "A global company needs to serve static content to users worldwide with the lowest possible latency. Which solution is most effective?",
    "options": [
      {
        "text": "S3 with regional replication",
        "isCorrect": false
      },
      {
        "text": "CloudFront with global edge locations",
        "isCorrect": true
      },
      {
        "text": "Multiple ALBs in different regions",
        "isCorrect": false
      },
      {
        "text": "Route 53 with latency-based routing",
        "isCorrect": false
      }
    ],
    "explanation": "CloudFront's global network of edge locations caches content close to users worldwide, providing the lowest latency for static content delivery.",
    "awsService": "CloudFront"
  },
  {
    "id": "q244",
    "questionText": "A company needs to ensure their multi-tier application can handle the failure of any single component. What architecture principle should they follow?",
    "options": [
      {
        "text": "Single point of failure design",
        "isCorrect": false
      },
      {
        "text": "Loosely coupled architecture",
        "isCorrect": true
      },
      {
        "text": "Monolithic application design",
        "isCorrect": false
      },
      {
        "text": "Shared database architecture",
        "isCorrect": false
      }
    ],
    "explanation": "Loosely coupled architecture ensures that components can fail independently without affecting the entire system, using services like SQS, SNS, and Load Balancers.",
    "awsService": "Well-Architected Framework"
  },
  {
    "id": "q245",
    "questionText": "A development team needs to test their application with a copy of production data monthly. What is the most cost-effective approach for the test database?",
    "options": [
      {
        "text": "Maintain a separate production-sized RDS instance",
        "isCorrect": false
      },
      {
        "text": "Create RDS snapshots and restore when needed",
        "isCorrect": true
      },
      {
        "text": "Use DynamoDB with on-demand capacity",
        "isCorrect": false
      },
      {
        "text": "Replicate data to a read replica",
        "isCorrect": false
      }
    ],
    "explanation": "RDS snapshots are cost-effective for periodic testing - you only pay for storage until you restore a snapshot to a running instance for testing.",
    "awsService": "RDS"
  },
  {
    "id": "q246",
    "questionText": "A company wants to monitor their application performance and automatically scale based on custom business metrics like order processing rate. Which service combination enables this?",
    "options": [
      {
        "text": "CloudWatch default metrics + Auto Scaling",
        "isCorrect": false
      },
      {
        "text": "CloudWatch custom metrics + Auto Scaling",
        "isCorrect": true
      },
      {
        "text": "X-Ray + Lambda",
        "isCorrect": false
      },
      {
        "text": "Config + Systems Manager",
        "isCorrect": false
      }
    ],
    "explanation": "CloudWatch custom metrics allow you to send business-specific metrics, and Auto Scaling can use these custom metrics to scale resources based on business requirements.",
    "awsService": "CloudWatch"
  },
  {
    "id": "q247",
    "questionText": "A financial services company needs to ensure all administrative actions in their AWS account are logged and tamper-proof. Which service configuration provides this?",
    "options": [
      {
        "text": "CloudWatch Logs with encryption",
        "isCorrect": false
      },
      {
        "text": "CloudTrail with log file validation and S3 MFA delete",
        "isCorrect": true
      },
      {
        "text": "Config with S3 storage",
        "isCorrect": false
      },
      {
        "text": "VPC Flow Logs",
        "isCorrect": false
      }
    ],
    "explanation": "CloudTrail with log file validation ensures logs haven't been tampered with, and S3 MFA delete prevents unauthorized deletion of log files.",
    "awsService": "CloudTrail"
  },
  {
    "id": "q248",
    "questionText": "A company runs a containerized application that needs to scale rapidly based on incoming requests. They want to minimize cold start times. Which service is most appropriate?",
    "options": [
      {
        "text": "Lambda with container images",
        "isCorrect": false
      },
      {
        "text": "ECS with Fargate Spot",
        "isCorrect": false
      },
      {
        "text": "ECS with Fargate and Application Auto Scaling",
        "isCorrect": true
      },
      {
        "text": "EKS with HPA",
        "isCorrect": false
      }
    ],
    "explanation": "ECS with Fargate provides fast container startup times without managing infrastructure, and Application Auto Scaling can quickly scale based on metrics to minimize response times.",
    "awsService": "ECS"
  },
  {
    "id": "q249",
    "questionText": "A data analytics company needs to query petabytes of data stored in S3 using SQL without moving the data. Which service should they use?",
    "options": [
      {
        "text": "Amazon Redshift Spectrum",
        "isCorrect": true
      },
      {
        "text": "Amazon Athena",
        "isCorrect": false
      },
      {
        "text": "Amazon EMR",
        "isCorrect": false
      },
      {
        "text": "AWS Glue",
        "isCorrect": false
      }
    ],
    "explanation": "While Athena can query S3 data, Redshift Spectrum is specifically designed for querying petabyte-scale data in S3 and can handle much larger datasets more efficiently.",
    "awsService": "Redshift"
  },
  {
    "id": "q250",
    "questionText": "A mobile gaming company needs to implement leaderboards that update in real-time for millions of players globally. Which architecture provides the best performance?",
    "options": [
      {
        "text": "RDS with read replicas",
        "isCorrect": false
      },
      {
        "text": "DynamoDB Global Tables with GSI",
        "isCorrect": true
      },
      {
        "text": "ElastiCache clusters in multiple regions",
        "isCorrect": false
      },
      {
        "text": "S3 with CloudFront",
        "isCorrect": false
      }
    ],
    "explanation": "DynamoDB Global Tables provide multi-region, multi-master replication with Global Secondary Indexes (GSI) perfect for real-time leaderboards accessed globally.",
    "awsService": "DynamoDB"
  }
]